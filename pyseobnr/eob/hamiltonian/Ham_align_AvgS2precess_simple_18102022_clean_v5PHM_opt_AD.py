#!/usr/bin/env python3
import numpy as jnp
from numba import jit as numb_jit



@numb_jit(nopython=True,cache=True)
def evaluate_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,calib_coeffs=None):
    """
    Toy aligned-spin Hamiltonian

    """

    # Coordinate definitions
    r,phi = q
    prst,L = p
    chix1,chiy1,chiz1 = chi1_v
    chix2,chiy2,chiz2 = chi2_v

    pphi = L

    # Calibration coeffs if any
    if calib_coeffs is not None:
        a6 = calib_coeffs['a6'].item()
        dSO = calib_coeffs['dSO'].item()
    # Extra quantities used in the Hamiltonian
    M = m_1 + m_2
    mu = m_1*m_2/(m_1+m_2)
    nu = mu/M
    Nu = nu
    X1 = m_1/M
    X2 = m_2/M
    Chi1 = chi_1
    Chi1x = chix1
    Chi1y = chiy1
    Chi1z = chiz1
    Chi2 = chi_2
    Chi2x = chix2
    Chi2y = chiy2
    Chi2z = chiz2
    chiL1 = chiL_1
    chiL2 = chiL_2


    # Actual Hamiltonian expressions
    Dbpm = r*(6730497718123.02*Nu**3 + 133772083200.0*Nu**2*r**2 + 1822680546449.21*Nu**2*r + 80059249540278.2*Nu**2 + 2589101062873.81*Nu*r**2 + 10611661054566.2*Nu*r - 12049908701745.2*Nu + 5107745331375.71*r**2 - 326837426.241486*r*(14700.0*Nu + 42911.0) - 39476764256925.6*r - (-5041721180160.0*Nu**2 - 25392914995744.3*Nu - 879923036160.0*r**2 - 283115520.0*r*(14700.0*Nu + 42911.0) + 104186110149937.0)*jnp.log(r) + 5787938193408.0*jnp.log(r)**2 + 275059053208689.0)/(55296.0*Nu*(14515200.0*Nu**3 - 42636451.6032331*Nu**2 - 2510664218.28128*Nu + 1002013764.01019) - 967680.0*r**3*(-138240.0*Nu**2 - 2675575.66847905*Nu - 5278341.3229329) - 9216.0*r**2*(-197773496.793534*Nu**2 - 630116198.873299*Nu + 5805304367.87913) + r*(5927865218923.02*Nu**3 + 43133561885859.3*Nu**2 + 43393301259014.8*Nu + 86618264430493.3*(1 - 0.496948781616935*Nu)**2 + 188440788778196.0) + 5787938193408.0*r*jnp.log(r)**2 + (-1698693120.0*Nu*(11592.0*Nu + 69847.0) + 879923036160.0*r**3 + 283115520.0*r**2*(14700.0*Nu + 42911.0) + 49152.0*r*(102574080.0*Nu**2 + 409207698.136075*Nu - 2119671837.36038))*jnp.log(r))

    Apm = 7680.0*r**4*(-5416406.59541186*Nu**2 + 28.0*Nu*(1920.0*a6 + 733955.307463037) + 2048.0*Nu*(756.0*Nu + 336.0*r + 407.0)*jnp.log(r) - 7.0*r*(-185763.092693281*Nu**2 + 938918.400156317*Nu - 245760.0) - 3440640.0)/(241555486248.807*Nu**4 + 1120.0*Nu**3*(-17833256.898555*r**2 - 163683964.822551*r - 1188987459.03162) + 7.0*Nu**2*(-39321600.0*a6*(3.0*r + 59.0) + 745857848.115604*a6 + 1426660551.8844*r**5 - 3089250703.76879*r**4 - 6178501407.53758*r**3 + 2064783811.32587*r**2 + 122635399361.987*r + 276057889687.011) + 67645734912.0*Nu**2*jnp.log(r)**2 + 53760.0*Nu*(7680.0*a6*(r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + 128.0*r*(-6852.34813868015*r**4 + 4264.6962773603*r**3 + 8529.39255472061*r**2 + 13218.7851094412*r - 33722.4297811176) + 113485.217444961*r*(-r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + 148.04406601634*r*(349.0*r**4 + 1926.0*r**3 + 3852.0*r**2 + 7704.0*r + 36400.0)) + 32768.0*Nu*(-1882456.23663972*Nu**2 - 38842241.4769507*Nu + 161280.0*r**5 + 480.0*r**4*(756.0*Nu + 1079.0) + 960.0*r**3*(756.0*Nu + 1079.0) + 1920.0*r**2*(588.0*Nu + 1079.0) + 240.0*r*(-3024.0*Nu**2 - 7466.27061066206*Nu + 17264.0) + 13447680.0)*jnp.log(r) + 13212057600.0*r**5)

    t2 = chix2**2 + chiy2**2 + chiz2**2

    t1 = chix1**2 + chiy1**2 + chiz1**2

    ap2 = X1**2*t1 + X1*X2*(2.0*chix1*chix2 + 2.0*chiy1*chiy2 + 2.0*chiz1*chiz2) + X2**2*t2

    xi = Dbpm**0.5*r**2*(Apm + ap2/r**2)/(ap2 + r**2)

    delta = X1 - X2

    flagNLOSS2 = 1.00000000000000

    apam = X1**2*t1 - X2**2*t2

    am2 = X1**2*t1 - X1*X2*(2.0*chix1*chix2 + 2.0*chiy1*chiy2 + 2.0*chiz1*chiz2) + X2**2*t2

    QSalign2 = flagNLOSS2*prst**4*(-0.46875*am2*(4.0*Nu**2 - 5.0*Nu + 1.0) - 0.15625*ap2*(32.0*Nu**2 - 33.0*Nu - 5.0) + 0.3125*apam*delta*(18.0*Nu - 1.0))/(r**3*xi**4)

    flagQPN5 = 1.00000000000000

    flagQPN4 = 1.00000000000000

    Qpm = flagQPN4*(0.121954868780449*Nu*prst**8/r + prst**6*(6.0*Nu**3 - 5.4*Nu**2 - 2.78300763695006*Nu)/r**2 + prst**4*(10.0*Nu**3 - 131.0*Nu**2 + 92.7110442849544*Nu)/r**3) + flagQPN5*(1.48275342024365*Nu*prst**8/r**2.5 - 11.3175085791863*Nu*prst**6/r**3.5 + 147.443752990146*Nu*prst**4/r**4.5) + flagQPN5*(prst**8*(-6.0*Nu**4 + 3.42857142857143*Nu**3 + 3.33842023648322*Nu**2 + 1.38977750996128*Nu)/r**2 + prst**6*(-14.0*Nu**4 + 188.0*Nu**3 - 89.5298327361234*Nu**2 - 33.9782122170436*Nu)/r**3 + prst**4*(602.318540416564*Nu**3 + Nu**2*(118.4*jnp.log(r) - 1796.13660498019) + Nu*(452.542166996693 - 51.6952380952381*jnp.log(r)))/r**4) + prst**4*(-6.0*Nu**2 + 8.0*Nu)/r**2

    Qq = QSalign2 + Qpm

    Bnpa = -r*(r + 2.0)/(ap2*r*(r + 2.0) + r**4)

    flagNLOSS = 1.00000000000000

    BnpSalign2 = flagNLOSS*(0.1875*am2*(4.0*Nu - 1.0) + ap2*(3.0*Nu + 2.8125) - 2.625*apam*delta)/r**3 + flagNLOSS2*(0.015625*am2*(4.0*Nu**2 + 115.0*Nu - 37.0) + 0.015625*ap2*(-1171.0*Nu - 861.0) + 0.03125*apam*delta*(26.0*Nu + 449.0))/r**4

    Bnp = Apm*Dbpm + BnpSalign2 + ap2/r**2 - 1.0

    flagNLOSSprec2 = 1.00000000000000

    flagNLOSSprec = 1.00000000000000

    amz = Chi1*X1 - Chi2*X2

    apz = Chi1*X1 + Chi2*X2

    napnam = -0.5*amz*apz + 0.5*apam

    amz2 = amz**2

    nam2 = 0.5*am2 - 0.5*amz2

    apz2 = apz**2

    nap2 = 0.5*ap2 - 0.5*apz2

    BpSprec2 = flagNLOSS*flagNLOSSprec*(nam2*(0.1875 - 0.75*Nu) + nap2*(-1.75*Nu - 0.9375) + napnam*(0.75 - 1.5*X2))/r**3 + flagNLOSS2*flagNLOSSprec2*(-0.125*delta*napnam*(98.0*Nu + 43.0) + 0.015625*nam2*(152.0*Nu**2 - 1090.0*Nu + 219.0) + 0.00520833333333333*nap2*(264.0*Nu**2 - 1610.0*Nu + 375.0))/r**4 - nap2/r**2

    Bp = BpSprec2 + 1.0

    ASprec2 = flagNLOSS*flagNLOSSprec*(4.125*delta*napnam + 0.125*nam2*(-4.0*Nu - 3.0) + 0.25*nap2*(7.0*Nu - 31.0))/r**4 + flagNLOSS2*flagNLOSSprec2*(0.25*delta*napnam*(68.0*Nu - 1.0) + 0.015625*nam2*(-328.0*Nu**2 + 1166.0*Nu - 171.0) + 0.00520833333333333*nap2*(-264.0*Nu**2 + 2870.0*Nu + 561.0))/r**5 + 2.0*nap2/r**3

    ASalign2 = flagNLOSS*(0.125*am2*(4.0*Nu + 1.0) + 1.125*ap2 - 1.25*apam*delta)/r**4 + flagNLOSS2*(0.046875*am2*(28.0*Nu**2 - 27.0*Nu - 3.0) - 0.390625*ap2*(7.0*Nu + 9.0) - 1.21875*apam*delta*(2.0*Nu - 3.0))/r**5

    A = (ASalign2 + ASprec2 + Apm + ap2/r**2)/(ap2*(1.0 + 2.0/r)/r**2 + 1.0)

    ap = X1*chiL1 + X2*chiL2

    lap = ap

    Heven = (A*(Bnpa*L**2*lap**2/r**2 + Bp*L**2/r**2 + Qq + prst**2*(Bnp + 1.0)/xi**2 + 1.0))**0.5

    am = X1*chiL1 - X2*chiL2

    lam = am

    Ga3 = L*lam*(-0.25*L**2*delta*nap2/r**3 + (0.0416666666666667*ap2*delta + nap2*(0.416666666666667 - 0.833333333333333*X2))/r**2) + L*lap*(L**2*(-0.25*nap2 + napnam*(0.5 - X2))/r**3 + (-0.25*ap2 + 0.208333333333333*apam*delta - 1.66666666666667*delta*napnam - 0.75*nap2)/r**2)

    SOcalib = L*Nu*dSO*lap/r**3

    flagNLOSO2 = 1.00000000000000

    flagNLOSO = 1.00000000000000

    gam = flagNLOSO*(L**2*(0.46875 - 0.28125*Nu)/r**2 + (0.34375*Nu + 0.09375)/r) + flagNLOSO2*(L**4*(0.29296875*Nu**2 - 0.3515625*Nu - 0.41015625)/r**4 + L**2*(-0.798177083333333*Nu**2 - 0.2734375*Nu - 0.23046875)/r**3 + (0.536458333333333*Nu**2 - 0.03125*Nu + 0.078125)/r**2) + 0.25

    gap = flagNLOSO*(L**2*(-1.40625*Nu - 0.46875)/r**2 + (0.71875*Nu - 0.09375)/r) + flagNLOSO2*(L**4*(1.34765625*Nu**2 + 0.5859375*Nu + 0.41015625)/r**4 + L**2*(-2.07161458333333*Nu**2 - 2.0859375*Nu + 0.23046875)/r**3 + (0.567708333333333*Nu**2 - 5.53125*Nu - 0.078125)/r**2) + 1.75

    Hodd = (Ga3 + L*delta*gam*lam + L*gap*lap + SOcalib)/(ap2*(r + 2.0) + r**3)

    pr = prst/xi

    Heff = Heven + Hodd

    # Evaluate H_real/nu
    H = M * jnp.sqrt(1+2*nu*(Heff-1)) / nu
    return H,xi



@numb_jit(nopython=True,cache=True)
def evaluate_Jacobian_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,calib_coeffs=None):
    """
    Toy aligned-spin Hamiltonian

    """

    # Coordinate definitions
    r,phi = q
    prst,L = p
    chix1,chiy1,chiz1 = chi1_v
    chix2,chiy2,chiz2 = chi2_v

    pphi = L

    # Calibration coeffs if any
    if calib_coeffs is not None:
        a6 = calib_coeffs['a6'].item()
        dSO = calib_coeffs['dSO'].item()

    # Extra quantities used in the Jacobian
    M = m_1 + m_2
    mu = m_1*m_2/(m_1+m_2)
    nu = mu/M
    Nu = nu
    X1 = m_1/M
    X2 = m_2/M
    Chi1 = chi_1
    Chi1x = chix1
    Chi1y = chiy1
    Chi1z = chiz1
    Chi2 = chi_2
    Chi2x = chix2
    Chi2y = chiy2
    Chi2z = chiz2
    chiL1 = chiL_1
    chiL2 = chiL_2
    x0 = r**3
    x1 = r + 2.0
    x2 = 2.0*chix1*chix2 + 2.0*chiy1*chiy2 + 2.0*chiz1*chiz2
    x3 = X2*x2
    x4 = X1*x3
    x5 = X1**2
    x6 = chix1**2 + chiy1**2 + chiz1**2
    x7 = x5*x6
    x8 = X2**2*(chix2**2 + chiy2**2 + chiz2**2)
    x9 = x7 + x8
    x10 = x4 + x9
    x11 = x1*x10
    x12 = x0 + x11
    x13 = x12**(-1)
    x14 = r**4
    x15 = x14**(-1)
    x16 = 3.0*Nu
    x17 = X1*chiL1
    x18 = X2*chiL2
    x19 = x17 + x18
    x20 = pphi*x19
    x21 = r**2
    x22 = x21**(-1)
    x23 = 0.71875*Nu - 0.09375
    x24 = -1.40625*Nu - 0.46875
    x25 = x0**(-1)
    x26 = pphi**2
    x27 = x25*x26
    x28 = 2.0*x27
    x29 = Nu**2
    x30 = -2.0859375*Nu - 2.07161458333333*x29 + 0.23046875
    x31 = 3.0*x15
    x32 = x26*x31
    x33 = 0.5859375*Nu + 1.34765625*x29 + 0.41015625
    x34 = pphi**4
    x35 = r**5
    x36 = x35**(-1)
    x37 = 4.0*x36
    x38 = x34*x37
    x39 = 0.34375*Nu + 0.09375
    x40 = 0.46875 - 0.28125*Nu
    x41 = -0.2734375*Nu - 0.798177083333333*x29 - 0.23046875
    x42 = -0.3515625*Nu + 0.29296875*x29 - 0.41015625
    x43 = X1 - X2
    x44 = x17 - x18
    x45 = pphi*x44
    x46 = x43*x45
    x47 = Chi1*X1
    x48 = Chi2*X2
    x49 = x47 + x48
    x50 = x49**2
    x51 = x10 - x50
    x52 = x26*x43
    x53 = x10*x43
    x54 = x51*(0.416666666666667 - 0.833333333333333*X2)
    x55 = x47 - x48
    x56 = -x49*x55 + x5*x6 - x8
    x57 = -0.125*x4 + 0.125*x50 + 0.5*x56*(0.5 - X2) - 0.125*x7 - 0.125*x8
    x58 = x7 - x8
    x59 = 5.0*X1
    x60 = -5.0*X2 + x59
    x61 = x56*x60
    x62 = Nu*dSO*x25
    x63 = r**(-1)
    x64 = x22*x26
    x65 = x15*x34
    x66 = x19*(x22*(-5.53125*Nu + 0.567708333333333*x29 - 0.078125) + x23*x63 + x24*x64 + x27*x30 + x33*x65 + 1.75)
    x67 = x43*(x22*(-0.03125*Nu + 0.536458333333333*x29 + 0.078125) + x27*x41 + x39*x63 + x40*x64 + x42*x65 + 0.25)
    x68 = x25*x51
    x69 = x52*x68
    x70 = x44*(x22*(0.0416666666666667*x53 + 0.5*x54) - 0.125*x69)
    x71 = x27*x57
    x72 = x19*(x22*(-0.625*x4 + 0.375*x50 + 0.0416666666666667*x58*x60 - 0.166666666666667*x61 - 0.625*x7 - 0.625*x8) + x71)
    x73 = prst**4
    x74 = r**(-4.5)
    x75 = Nu*x74
    x76 = prst**6
    x77 = r**(-3.5)
    x78 = Nu*x77
    x79 = r**(-2.5)
    x80 = prst**8
    x81 = Nu*x80
    x82 = Nu*x63
    x83 = 0.121954868780449*x80
    x84 = 8.0*Nu - 6.0*x29
    x85 = x22*x84
    x86 = Nu**3
    x87 = 92.7110442849544*Nu - 131.0*x29 + 10.0*x86
    x88 = x25*x73
    x89 = -2.78300763695006*Nu - 5.4*x29 + 6.0*x86
    x90 = x22*x89
    x91 = Nu**4
    x92 = -33.9782122170436*Nu - 89.5298327361234*x29 + 188.0*x86 - 14.0*x91
    x93 = x25*x76
    x94 = 1.38977750996128*Nu + 3.33842023648322*x29 + 3.42857142857143*x86 - 6.0*x91
    x95 = x80*x94
    x96 = jnp.log(r)
    x97 = Nu*(452.542166996693 - 51.6952380952381*x96) + x29*(118.4*x96 - 1796.13660498019) + 602.318540416564*x86
    x98 = x15*x73
    x99 = r*x11 + x14
    x100 = x99**(-1)
    x101 = x19**2
    x102 = x100*x101
    x103 = x102*x26*x63
    x104 = 0.5*x51
    x105 = 0.5*x56
    x106 = -x4 + x9
    x107 = x106 - x55**2
    x108 = 0.5*x107
    x109 = x43*x56
    x110 = x109*(-98.0*Nu - 43.0)
    x111 = 264.0*x29
    x112 = -1610.0*Nu + x111 + 375.0
    x113 = 0.00260416666666667*x51
    x114 = -1090.0*Nu + 152.0*x29 + 219.0
    x115 = 0.0078125*x107
    x116 = -x104*x22 + x15*(0.0625*x110 + x112*x113 + x114*x115) + x25*(x104*(-1.75*Nu - 0.9375) + x105*(0.75 - 1.5*X2) + x108*(0.1875 - 0.75*Nu)) + 1.0
    x117 = r**(-13)
    x118 = x10 + x21
    x119 = x118**4
    x120 = x10*x22
    x121 = 756.0*Nu
    x122 = 336.0*r + x121 + 407.0
    x123 = 2048.0*Nu*x122*x96 + 28.0*Nu*(1920.0*a6 + 733955.307463037) - 7.0*r*(938918.400156317*Nu - 185763.092693281*x29 - 245760.0) - 5416406.59541186*x29 - 3440640.0
    x124 = x96**2
    x125 = x124*x29
    x126 = x86*(-163683964.822551*r - 17833256.898555*x21 - 1188987459.03162)
    x127 = x29*(-39321600.0*a6*(3.0*r + 59.0) + 745857848.115604*a6 + 122635399361.987*r - 6178501407.53758*x0 - 3089250703.76879*x14 + 2064783811.32587*x21 + 1426660551.8844*x35 + 276057889687.011)
    x128 = 588.0*Nu + 1079.0
    x129 = x121 + 1079.0
    x130 = x0*x129
    x131 = -38842241.4769507*Nu + 240.0*r*(-7466.27061066206*Nu - 3024.0*x29 + 17264.0) + 1920.0*x128*x21 + 480.0*x129*x14 + 960.0*x130 - 1882456.23663972*x29 + 161280.0*x35 + 13447680.0
    x132 = Nu*x96
    x133 = x131*x132
    x134 = 8.0*r
    x135 = 2.0*x0 + x134 + 4.0*x21 + 16.0
    x136 = 7680.0*a6
    x137 = 128.0*r
    x138 = 7704.0*r
    x139 = 148.04406601634*r
    x140 = 113485.217444961*r
    x141 = Nu*(x136*(x135 + x14) + x137*(13218.7851094412*r + 4264.6962773603*x0 - 6852.34813868015*x14 + 8529.39255472061*x21 - 33722.4297811176) + x139*(1926.0*x0 + x138 + 349.0*x14 + 3852.0*x21 + 36400.0) + x140*(x135 - x14))
    x142 = (67645734912.0*x125 + 1120.0*x126 + 7.0*x127 + 32768.0*x133 + 53760.0*x141 + 13212057600.0*x35 + 241555486248.807*x91)**(-1)
    x143 = x14*x142
    x144 = x123*x143
    x145 = 0.000130208333333333*x120 + x144
    x146 = x145**(-4)
    x147 = r*x124
    x148 = -630116198.873299*Nu - 197773496.793534*x29 + 5805304367.87913
    x149 = x148*x21
    x150 = -2675575.66847905*Nu - 138240.0*x29 - 5278341.3229329
    x151 = x0*x150
    x152 = Nu*(-2510664218.28128*Nu - 42636451.6032331*x29 + 14515200.0*x86 + 1002013764.01019)
    x153 = 43393301259014.8*Nu + 43133561885859.3*x29 + 5927865218923.02*x86 + 86618264430493.3*(1 - 0.496948781616935*Nu)**2 + 188440788778196.0
    x154 = r*x153
    x155 = 14700.0*Nu + 42911.0
    x156 = 283115520.0*x155
    x157 = -1698693120.0*Nu*(11592.0*Nu + 69847.0) + 49152.0*r*(409207698.136075*Nu + 102574080.0*x29 - 2119671837.36038) + 879923036160.0*x0 + x156*x21
    x158 = x157*x96
    x159 = (x147 - 1.59227685093395e-9*x149 - 1.67189069348064e-7*x151 + 9.55366110560367e-9*x152 + 1.72773095804465e-13*x154 + 1.72773095804465e-13*x158)**2
    x160 = Nu*r
    x161 = Nu*x21
    x162 = r*x29
    x163 = r*x155
    x164 = x21*x29
    x165 = 5041721180160.0*x29 - 104186110149937.0
    x166 = -25392914995744.3*Nu - r*x156 - x165 - 879923036160.0*x21
    x167 = x166*x96
    x168 = -0.0438084424460039*Nu - 0.143521050466841*r + 0.0210425293255724*x124 + 0.0385795738434214*x160 + 0.00941289164152486*x161 + 0.00662650629087394*x162 - 1.18824456940711e-6*x163 + 0.000486339502879429*x164 - 3.63558293513537e-15*x167 + 0.0185696317637669*x21 + 0.291062041428379*x29 + 0.0244692826489756*x86 + 1
    x169 = x168**(-2)
    x170 = 4.0*x29
    x171 = 0.0625*x58*x60*(18.0*Nu - 1.0) - 0.03125*(-33.0*Nu + 32.0*x29 - 5.0)*(x3*x59 + 5.0*x7 + 5.0*x8) - 0.03125*(-5.0*Nu + x170 + 1.0)*(-15.0*x4 + 15.0*x7 + 15.0*x8)
    x172 = x119*x146*x159*x169*x171*x73
    x173 = x118**2
    x174 = prst**2
    x175 = x145**(-2)
    x176 = 1822680546449.21*x29
    x177 = 5787938193408.0*x124
    x178 = -12049908701745.2*Nu + r*x176 - 39476764256925.6*r + 10611661054566.2*x160 + 2589101062873.81*x161 - 326837426.241486*x163 + 133772083200.0*x164 - x167 + x177 + 5107745331375.71*x21 + 80059249540278.2*x29 + 6730497718123.02*x86 + 275059053208689.0
    x179 = x178**(-1)
    x180 = 0.125*x58
    x181 = 4.0*Nu
    x182 = 3.0*x4
    x183 = 3.0*x7 + 3.0*x8
    x184 = -x182 + x183
    x185 = 0.0625*x184
    x186 = 0.03125*x58
    x187 = x43*(26.0*Nu + 449.0)
    x188 = x10*(-1171.0*Nu - 861.0)
    x189 = x106*(115.0*Nu + x170 - 37.0)
    x190 = 5787938193408.0*x147 - 9216.0*x149 - 967680.0*x151 + 55296.0*x152 + x154 + x158
    x191 = x190**(-1)
    x192 = x178*x191
    x193 = x192*x35
    x194 = x123*x142
    x195 = 7680.0*x194
    x196 = x120 + x15*(x186*x187 + 0.015625*x188 + 0.015625*x189) + x193*x195 + x25*(x10*(x16 + 2.8125) + x180*(-21.0*X1 + 21.0*X2) + x185*(x181 - 1.0))
    x197 = x173*x174*x175*x179*x190*x196
    x198 = -x1*x103 + x116*x64 + 1.27277314139085e-19*x117*x172 + 1.69542100694444e-8*x197*x36 + x22*x95 + 147.443752990146*x73*x75 + x73*x85 - 11.3175085791863*x76*x78 + x76*x90 + 1.48275342024365*x79*x81 + x82*x83 + x87*x88 + x92*x93 + x97*x98 + 1.0
    x199 = 2.0*x63
    x200 = x120*(x199 + 1.0) + 1.0
    x201 = x200**(-1)
    x202 = -x58*x60
    x203 = x106*(x181 + 1.0)
    x204 = x186*(-39.0*X1 + 39.0*X2)
    x205 = 7.0*Nu
    x206 = 0.390625*x4 + 0.390625*x7 + 0.390625*x8
    x207 = 0.015625*x184
    x208 = x56*(33.0*X1 - 33.0*X2)
    x209 = x51*(x205 - 31.0)
    x210 = x107*(-x181 - 3.0)
    x211 = 0.125*x109
    x212 = x120 + 7680.0*x144 + x15*(0.0625*x208 + 0.125*x209 + 0.0625*x210) + x15*(0.25*x202 + 0.125*x203 + 1.125*x4 + 1.125*x7 + 1.125*x8) + x36*(x113*(2870.0*Nu - x111 + 561.0) + x115*(1166.0*Nu - 328.0*x29 - 171.0) + x211*(68.0*Nu - 1.0)) + x36*(x204*(2.0*Nu - 3.0) - x206*(x205 + 9.0) + x207*(-27.0*Nu + 28.0*x29 - 3.0)) + x68
    x213 = x201*x212
    x214 = (x198*x213)**(-0.5)
    x215 = -2.0*x4 - 2.0*x7 - 2.0*x8
    x216 = 4.0*x63 + 2.0
    x217 = 4.5*X2
    x218 = r**(-6)
    x219 = -6572428.80109422*Nu + 2048.0*x122*x82 + 688128.0*x132 + 1300341.64885296*x29 + 1720320.0
    x220 = x29*x63
    x221 = 4.0*x0
    x222 = x134 + 6.0*x21 + 8.0
    x223 = 1.31621673590926e-19*x123*(53760.0*Nu*(3740417.71815805*r + 1057984.42953951*x0 + x136*(x221 + x222) + x137*(17058.7851094412*r - 27409.3925547206*x0 + 12794.0888320809*x21 + 13218.7851094412) + x139*(1396.0*x0 + x138 + 5778.0*x21 + 7704.0) - 938918.400156317*x14 + x140*(-x221 + x222) + 2115968.85907902*x21 + 2888096.47013111) + 32768.0*x131*x82 + 32768.0*x132*(-1791904.9465589*Nu + 3840.0*r*x128 + 2880.0*x129*x21 + 1920.0*x130 + 806400.0*x14 - 725760.0*x29 + 4143360.0) + 66060288000.0*x14 + 135291469824.0*x220*x96 + 7.0*x29*(-117964800.0*a6 + 4129567622.65173*r - 12357002815.0752*x0 + 7133302759.42198*x14 - 18535504222.6128*x21 + 122635399361.987) + 7.0*x86*(-5706642207.53758*r - 26189434371.6082))/(0.28004222119933*x125 + 4.63661586574928e-9*x126 + 2.8978849160933e-11*x127 + 1.35654132757922e-7*x133 + 2.22557561555966e-7*x141 + 0.0546957463279941*x35 + x91)**2
    x224 = x14*x223
    x225 = 2.0*x25
    x226 = 11575876386816.0*x96
    x227 = 5807150888816.34*Nu + 10215490662751.4*r + 5178202125747.62*x160 + 267544166400.0*x162 - x166*x63 + x176 + x226*x63 + x96*(4161798144000.0*Nu + 1759846072320.0*r + 12148770078720.0) - 53501685054374.1
    x228 = x117*x119*x159*x171*x73
    x229 = -18432.0*r*x148 - 2903040.0*x150*x21 + x153 + x157*x63 + x177 + x226 + x96*(20113376778784.3*Nu + 566231040.0*x163 + x165 + 2639769108480.0*x21)
    x230 = x174*x196
    x231 = x215*x25
    x232 = 7680.0*x219
    x233 = 30720.0*x0*x194 + x143*x232 - x224 + x231
    x234 = x190*x36
    x235 = prst**3
    x236 = prst**5
    x237 = prst**7
    x238 = 4.0*x235
    x239 = 6.0*x236
    x240 = x212*x214/(x120*x216 + 2.0)
    x241 = 2.0*pphi*x22
    x242 = pphi*x225
    x243 = 4.0*pphi**3*x15


    # Evaluate Hamiltonian
    H,_ = evaluate_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,calib_coeffs=calib_coeffs)

    # Heff Jacobian expressions
    dHeffdr = x13*(-dSO*x15*x16*x20 + x20*(x25*(1.25*x4 - 0.75*x50 - 0.0833333333333333*x58*x60 + 0.333333333333333*x61 + 1.25*x7 + 1.25*x8) - x32*x57) + x20*(-x22*x23 - x24*x28 - x25*(-11.0625*Nu + 1.13541666666667*x29 - 0.15625) - x30*x32 - x33*x38) + x45*(0.375*x15*x51*x52 - x25*(0.0833333333333333*x53 + x54)) + x46*(-x22*x39 - x25*(-0.0625*Nu + 1.07291666666667*x29 + 0.15625) - x28*x40 - x32*x41 - x38*x42)) + 0.5*x214*(x198*x201*(30720.0*x0*x123*x142 + 7680.0*x14*x142*x219 - x15*(x182 + x183 - 3.0*x50) + x215*x25 - x218*(x113*(14350.0*Nu - 1320.0*x29 + 2805.0) + x115*(5830.0*Nu - 1640.0*x29 - 855.0) + x211*(340.0*Nu - 5.0)) - x218*(x204*(10.0*Nu - 15.0) - x206*(35.0*Nu + 45.0) + x207*(-135.0*Nu + 140.0*x29 - 15.0)) - x224 - x36*(0.25*x208 + 0.5*x209 + 0.25*x210) - x36*(X1*x2*x217 + x202 + 0.5*x203 + 4.5*x7 + 4.5*x8)) - x198*x212*(-x10*x216*x25 + x15*x215)/x200**2 + x213*(-663.496888455656*Nu*r**(-5.5)*x73 - Nu*x22*x83 + 39.6112800271521*Nu*x74*x76 + x1*x100*x101*x22*x26 + x1*x101*x26*x63*(r*x10 + x11 + x221)/x99**2 - x103 - x116*x28 + 7.59859378406358e-45*x117*x119*x146*x169*x171*x190*x229*x73 + 6.78168402777778e-8*x118*x15*x174*x175*x179*x190*x196 - 9.25454462627843e-34*x146*x227*x228/x168**3 + x15*x73*(118.4*x220 - 51.6952380952381*x82) - 2.24091649004576e-37*x169*x173*x175*x190*x227*x230*x36 + 1.69542100694444e-8*x173*x174*x175*x179*x190*x36*(x142*x193*x232 + 38400.0*x144*x192 - x15*(x10*(9.0*Nu + 8.4375) + x180*(-63.0*X1 + 63.0*X2) + x185*(12.0*Nu - 3.0)) + x191*x195*x227*x35 - x193*x223 + x231 - x36*(x180*x187 + 0.0625*x188 + 0.0625*x189) - 2.29252167428035e-22*x178*x194*x229*x35/x159) + 1.69542100694444e-8*x173*x174*x175*x179*x196*x229*x36 - 8.47710503472222e-8*x197*x218 + x22*x26*(-x15*(x104*(-5.25*Nu - 2.8125) + x105*(2.25 - x217) + x108*(0.5625 - 2.25*Nu)) + x25*x51 - x36*(0.03125*x107*x114 + 0.25*x110 + 0.0104166666666667*x112*x51)) - x225*x95 - x31*x76*x92 - x37*x73*x97 - 3.70688355060912*x77*x81 - 2.0*x84*x88 - 3.0*x87*x98 - 2.0*x89*x93 - 4.41515887225116e-12*x173*x179*x230*x233*x234/x145**3 - 6.62902677807736e-23*x169*x228*x233/x145**5 + 1.01821851311268e-18*x118**3*x146*x159*x169*x171*x73/r**12 - 1.65460508380811e-18*x172/r**14)) - (x10 + 3.0*x21)*(pphi*x66 + pphi*x70 + pphi*x72 + x20*x62 + x45*x67)/x12**2

    dHeffdphi = 0

    dHeffdpr = x240*(11.8620273619492*Nu*x237*x79 + 3.39084201388889e-8*prst*x173*x175*x179*x196*x234 + 5.09109256556341e-19*x117*x119*x146*x159*x169*x171*x235 + x15*x238*x97 + 8.0*x22*x237*x94 + 589.775011960583*x235*x75 - 67.9050514751178*x236*x78 + 0.975638950243592*x237*x82 + x238*x25*x87 + x238*x85 + x239*x25*x92 + x239*x90)

    dHeffdpphi = x13*(x19*x62 + 2.0*x19*x71 + x20*(x24*x241 + x242*x30 + x243*x33) + x44*x67 - 0.25*x44*x69 + x46*(x241*x40 + x242*x41 + x243*x42) + x66 + x70 + x72) + x240*(-pphi*x1*x102*x199 + 2.0*pphi*x116*x22)

    # Compute H Jacobian
    dHdr = M * M * dHeffdr / (nu*H)
    dHdphi = M * M * dHeffdphi / (nu*H)
    dHdpr = M * M * dHeffdpr / (nu*H)
    dHdpphi = M * M * dHeffdpphi / (nu*H)

    return dHdr, dHdphi, dHdpr, dHdpphi


@numb_jit(nopython=True,cache=True)
def evaluate_Hessian_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2, calib_coeffs=None):
    """
    Toy aligned-spin Hamiltonian

    """

    # Coordinate definitions
    r,phi = q
    prst,L = p
    chix1,chiy1,chiz1 = chi1_v
    chix2,chiy2,chiz2 = chi2_v

    pphi = L

    # Calibration coeffs if any
    if calib_coeffs is not None:
        a6 = calib_coeffs['a6'].item()
        dSO = calib_coeffs['dSO'].item()


    # Extra quantities used in the Hessian
    M = m_1 + m_2
    mu = m_1*m_2/(m_1+m_2)
    nu = mu/M
    Nu = nu
    X1 = m_1/M
    X2 = m_2/M
    Chi1 = chi_1
    Chi1x = chix1
    Chi1y = chiy1
    Chi1z = chiz1
    Chi2 = chi_2
    Chi2x = chix2
    Chi2y = chiy2
    Chi2z = chiz2
    chiL1 = chiL_1
    chiL2 = chiL_2
    x0 = r**3
    x1 = r + 2.0
    x2 = 2.0*chix1*chix2 + 2.0*chiy1*chiy2 + 2.0*chiz1*chiz2
    x3 = X2*x2
    x4 = X1*x3
    x5 = X1**2
    x6 = chix1**2 + chiy1**2 + chiz1**2
    x7 = x5*x6
    x8 = X2**2*(chix2**2 + chiy2**2 + chiz2**2)
    x9 = x7 + x8
    x10 = x4 + x9
    x11 = x1*x10
    x12 = x0 + x11
    x13 = x12**(-1)
    x14 = r**4
    x15 = x14**(-1)
    x16 = 3.0*Nu
    x17 = X1*chiL1
    x18 = X2*chiL2
    x19 = x17 + x18
    x20 = pphi*x19
    x21 = r**2
    x22 = x21**(-1)
    x23 = 0.71875*Nu - 0.09375
    x24 = -1.40625*Nu - 0.46875
    x25 = x0**(-1)
    x26 = pphi**2
    x27 = x25*x26
    x28 = 2.0*x27
    x29 = Nu**2
    x30 = -2.0859375*Nu - 2.07161458333333*x29 + 0.23046875
    x31 = 3.0*x15
    x32 = x26*x31
    x33 = 0.5859375*Nu + 1.34765625*x29 + 0.41015625
    x34 = pphi**4
    x35 = r**5
    x36 = x35**(-1)
    x37 = 4.0*x36
    x38 = x34*x37
    x39 = 0.34375*Nu + 0.09375
    x40 = 0.46875 - 0.28125*Nu
    x41 = -0.2734375*Nu - 0.798177083333333*x29 - 0.23046875
    x42 = -0.3515625*Nu + 0.29296875*x29 - 0.41015625
    x43 = X1 - X2
    x44 = x17 - x18
    x45 = pphi*x44
    x46 = x43*x45
    x47 = Chi1*X1
    x48 = Chi2*X2
    x49 = x47 + x48
    x50 = x49**2
    x51 = x10 - x50
    x52 = x26*x43
    x53 = x10*x43
    x54 = x51*(0.416666666666667 - 0.833333333333333*X2)
    x55 = x47 - x48
    x56 = -x49*x55 + x5*x6 - x8
    x57 = -0.125*x4 + 0.125*x50 + 0.5*x56*(0.5 - X2) - 0.125*x7 - 0.125*x8
    x58 = x7 - x8
    x59 = 5.0*X1
    x60 = -5.0*X2 + x59
    x61 = x56*x60
    x62 = Nu*dSO*x25
    x63 = r**(-1)
    x64 = x22*x26
    x65 = x15*x34
    x66 = x19*(x22*(-5.53125*Nu + 0.567708333333333*x29 - 0.078125) + x23*x63 + x24*x64 + x27*x30 + x33*x65 + 1.75)
    x67 = x43*(x22*(-0.03125*Nu + 0.536458333333333*x29 + 0.078125) + x27*x41 + x39*x63 + x40*x64 + x42*x65 + 0.25)
    x68 = x25*x51
    x69 = x52*x68
    x70 = x44*(x22*(0.0416666666666667*x53 + 0.5*x54) - 0.125*x69)
    x71 = x27*x57
    x72 = x19*(x22*(-0.625*x4 + 0.375*x50 + 0.0416666666666667*x58*x60 - 0.166666666666667*x61 - 0.625*x7 - 0.625*x8) + x71)
    x73 = prst**4
    x74 = r**(-4.5)
    x75 = Nu*x74
    x76 = prst**6
    x77 = r**(-3.5)
    x78 = Nu*x77
    x79 = r**(-2.5)
    x80 = prst**8
    x81 = Nu*x80
    x82 = Nu*x63
    x83 = 0.121954868780449*x80
    x84 = 8.0*Nu - 6.0*x29
    x85 = x22*x84
    x86 = Nu**3
    x87 = 92.7110442849544*Nu - 131.0*x29 + 10.0*x86
    x88 = x25*x73
    x89 = -2.78300763695006*Nu - 5.4*x29 + 6.0*x86
    x90 = x22*x89
    x91 = Nu**4
    x92 = -33.9782122170436*Nu - 89.5298327361234*x29 + 188.0*x86 - 14.0*x91
    x93 = x25*x76
    x94 = 1.38977750996128*Nu + 3.33842023648322*x29 + 3.42857142857143*x86 - 6.0*x91
    x95 = x80*x94
    x96 = jnp.log(r)
    x97 = Nu*(452.542166996693 - 51.6952380952381*x96) + x29*(118.4*x96 - 1796.13660498019) + 602.318540416564*x86
    x98 = x15*x73
    x99 = r*x11 + x14
    x100 = x99**(-1)
    x101 = x19**2
    x102 = x100*x101
    x103 = x102*x26*x63
    x104 = 0.5*x51
    x105 = 0.5*x56
    x106 = -x4 + x9
    x107 = x106 - x55**2
    x108 = 0.5*x107
    x109 = x43*x56
    x110 = x109*(-98.0*Nu - 43.0)
    x111 = 264.0*x29
    x112 = -1610.0*Nu + x111 + 375.0
    x113 = 0.00260416666666667*x51
    x114 = -1090.0*Nu + 152.0*x29 + 219.0
    x115 = 0.0078125*x107
    x116 = -x104*x22 + x15*(0.0625*x110 + x112*x113 + x114*x115) + x25*(x104*(-1.75*Nu - 0.9375) + x105*(0.75 - 1.5*X2) + x108*(0.1875 - 0.75*Nu)) + 1.0
    x117 = r**(-13)
    x118 = x10 + x21
    x119 = x118**4
    x120 = x10*x22
    x121 = 756.0*Nu
    x122 = 336.0*r + x121 + 407.0
    x123 = 2048.0*Nu*x122*x96 + 28.0*Nu*(1920.0*a6 + 733955.307463037) - 7.0*r*(938918.400156317*Nu - 185763.092693281*x29 - 245760.0) - 5416406.59541186*x29 - 3440640.0
    x124 = x96**2
    x125 = x124*x29
    x126 = x86*(-163683964.822551*r - 17833256.898555*x21 - 1188987459.03162)
    x127 = x29*(-39321600.0*a6*(3.0*r + 59.0) + 745857848.115604*a6 + 122635399361.987*r - 6178501407.53758*x0 - 3089250703.76879*x14 + 2064783811.32587*x21 + 1426660551.8844*x35 + 276057889687.011)
    x128 = 588.0*Nu + 1079.0
    x129 = x121 + 1079.0
    x130 = x0*x129
    x131 = -38842241.4769507*Nu + 240.0*r*(-7466.27061066206*Nu - 3024.0*x29 + 17264.0) + 1920.0*x128*x21 + 480.0*x129*x14 + 960.0*x130 - 1882456.23663972*x29 + 161280.0*x35 + 13447680.0
    x132 = Nu*x96
    x133 = x131*x132
    x134 = 8.0*r
    x135 = 2.0*x0 + x134 + 4.0*x21 + 16.0
    x136 = 7680.0*a6
    x137 = 128.0*r
    x138 = 7704.0*r
    x139 = 148.04406601634*r
    x140 = 113485.217444961*r
    x141 = Nu*(x136*(x135 + x14) + x137*(13218.7851094412*r + 4264.6962773603*x0 - 6852.34813868015*x14 + 8529.39255472061*x21 - 33722.4297811176) + x139*(1926.0*x0 + x138 + 349.0*x14 + 3852.0*x21 + 36400.0) + x140*(x135 - x14))
    x142 = (67645734912.0*x125 + 1120.0*x126 + 7.0*x127 + 32768.0*x133 + 53760.0*x141 + 13212057600.0*x35 + 241555486248.807*x91)**(-1)
    x143 = x14*x142
    x144 = x123*x143
    x145 = 0.000130208333333333*x120 + x144
    x146 = x145**(-4)
    x147 = r*x124
    x148 = -630116198.873299*Nu - 197773496.793534*x29 + 5805304367.87913
    x149 = x148*x21
    x150 = -2675575.66847905*Nu - 138240.0*x29 - 5278341.3229329
    x151 = x0*x150
    x152 = Nu*(-2510664218.28128*Nu - 42636451.6032331*x29 + 14515200.0*x86 + 1002013764.01019)
    x153 = 43393301259014.8*Nu + 43133561885859.3*x29 + 5927865218923.02*x86 + 86618264430493.3*(1 - 0.496948781616935*Nu)**2 + 188440788778196.0
    x154 = r*x153
    x155 = 14700.0*Nu + 42911.0
    x156 = 283115520.0*x155
    x157 = -1698693120.0*Nu*(11592.0*Nu + 69847.0) + 49152.0*r*(409207698.136075*Nu + 102574080.0*x29 - 2119671837.36038) + 879923036160.0*x0 + x156*x21
    x158 = x157*x96
    x159 = (x147 - 1.59227685093395e-9*x149 - 1.67189069348064e-7*x151 + 9.55366110560367e-9*x152 + 1.72773095804465e-13*x154 + 1.72773095804465e-13*x158)**2
    x160 = Nu*r
    x161 = Nu*x21
    x162 = r*x29
    x163 = r*x155
    x164 = x21*x29
    x165 = 5041721180160.0*x29 - 104186110149937.0
    x166 = -25392914995744.3*Nu - r*x156 - x165 - 879923036160.0*x21
    x167 = x166*x96
    x168 = -0.0438084424460039*Nu - 0.143521050466841*r + 0.0210425293255724*x124 + 0.0385795738434214*x160 + 0.00941289164152486*x161 + 0.00662650629087394*x162 - 1.18824456940711e-6*x163 + 0.000486339502879429*x164 - 3.63558293513537e-15*x167 + 0.0185696317637669*x21 + 0.291062041428379*x29 + 0.0244692826489756*x86 + 1
    x169 = x168**(-2)
    x170 = 4.0*x29
    x171 = 0.0625*x58*x60*(18.0*Nu - 1.0) - 0.03125*(-33.0*Nu + 32.0*x29 - 5.0)*(x3*x59 + 5.0*x7 + 5.0*x8) - 0.03125*(-5.0*Nu + x170 + 1.0)*(-15.0*x4 + 15.0*x7 + 15.0*x8)
    x172 = x119*x146*x159*x169*x171*x73
    x173 = x118**2
    x174 = prst**2
    x175 = x145**(-2)
    x176 = 1822680546449.21*x29
    x177 = 5787938193408.0*x124
    x178 = -12049908701745.2*Nu + r*x176 - 39476764256925.6*r + 10611661054566.2*x160 + 2589101062873.81*x161 - 326837426.241486*x163 + 133772083200.0*x164 - x167 + x177 + 5107745331375.71*x21 + 80059249540278.2*x29 + 6730497718123.02*x86 + 275059053208689.0
    x179 = x178**(-1)
    x180 = 0.125*x58
    x181 = 4.0*Nu
    x182 = 3.0*x4
    x183 = 3.0*x7 + 3.0*x8
    x184 = -x182 + x183
    x185 = 0.0625*x184
    x186 = 0.03125*x58
    x187 = x43*(26.0*Nu + 449.0)
    x188 = x10*(-1171.0*Nu - 861.0)
    x189 = x106*(115.0*Nu + x170 - 37.0)
    x190 = 5787938193408.0*x147 - 9216.0*x149 - 967680.0*x151 + 55296.0*x152 + x154 + x158
    x191 = x190**(-1)
    x192 = x178*x191
    x193 = x192*x35
    x194 = x123*x142
    x195 = 7680.0*x194
    x196 = x120 + x15*(x186*x187 + 0.015625*x188 + 0.015625*x189) + x193*x195 + x25*(x10*(x16 + 2.8125) + x180*(-21.0*X1 + 21.0*X2) + x185*(x181 - 1.0))
    x197 = x173*x174*x175*x179*x190*x196
    x198 = -x1*x103 + x116*x64 + 1.27277314139085e-19*x117*x172 + 1.69542100694444e-8*x197*x36 + x22*x95 + 147.443752990146*x73*x75 + x73*x85 - 11.3175085791863*x76*x78 + x76*x90 + 1.48275342024365*x79*x81 + x82*x83 + x87*x88 + x92*x93 + x97*x98 + 1.0
    x199 = 2.0*x63
    x200 = x120*(x199 + 1.0) + 1.0
    x201 = x200**(-1)
    x202 = -x58*x60
    x203 = x106*(x181 + 1.0)
    x204 = x186*(-39.0*X1 + 39.0*X2)
    x205 = 7.0*Nu
    x206 = 0.390625*x4 + 0.390625*x7 + 0.390625*x8
    x207 = 0.015625*x184
    x208 = x56*(33.0*X1 - 33.0*X2)
    x209 = x51*(x205 - 31.0)
    x210 = x107*(-x181 - 3.0)
    x211 = 0.125*x109
    x212 = x120 + 7680.0*x144 + x15*(0.0625*x208 + 0.125*x209 + 0.0625*x210) + x15*(0.25*x202 + 0.125*x203 + 1.125*x4 + 1.125*x7 + 1.125*x8) + x36*(x113*(2870.0*Nu - x111 + 561.0) + x115*(1166.0*Nu - 328.0*x29 - 171.0) + x211*(68.0*Nu - 1.0)) + x36*(x204*(2.0*Nu - 3.0) - x206*(x205 + 9.0) + x207*(-27.0*Nu + 28.0*x29 - 3.0)) + x68
    x213 = x201*x212
    x214 = (x198*x213)**(-0.5)
    x215 = -2.0*x4 - 2.0*x7 - 2.0*x8
    x216 = 4.0*x63 + 2.0
    x217 = 4.5*X2
    x218 = r**(-6)
    x219 = -6572428.80109422*Nu + 2048.0*x122*x82 + 688128.0*x132 + 1300341.64885296*x29 + 1720320.0
    x220 = x29*x63
    x221 = 4.0*x0
    x222 = x134 + 6.0*x21 + 8.0
    x223 = 1.31621673590926e-19*x123*(53760.0*Nu*(3740417.71815805*r + 1057984.42953951*x0 + x136*(x221 + x222) + x137*(17058.7851094412*r - 27409.3925547206*x0 + 12794.0888320809*x21 + 13218.7851094412) + x139*(1396.0*x0 + x138 + 5778.0*x21 + 7704.0) - 938918.400156317*x14 + x140*(-x221 + x222) + 2115968.85907902*x21 + 2888096.47013111) + 32768.0*x131*x82 + 32768.0*x132*(-1791904.9465589*Nu + 3840.0*r*x128 + 2880.0*x129*x21 + 1920.0*x130 + 806400.0*x14 - 725760.0*x29 + 4143360.0) + 66060288000.0*x14 + 135291469824.0*x220*x96 + 7.0*x29*(-117964800.0*a6 + 4129567622.65173*r - 12357002815.0752*x0 + 7133302759.42198*x14 - 18535504222.6128*x21 + 122635399361.987) + 7.0*x86*(-5706642207.53758*r - 26189434371.6082))/(0.28004222119933*x125 + 4.63661586574928e-9*x126 + 2.8978849160933e-11*x127 + 1.35654132757922e-7*x133 + 2.22557561555966e-7*x141 + 0.0546957463279941*x35 + x91)**2
    x224 = x14*x223
    x225 = 2.0*x25
    x226 = 11575876386816.0*x96
    x227 = 5807150888816.34*Nu + 10215490662751.4*r + 5178202125747.62*x160 + 267544166400.0*x162 - x166*x63 + x176 + x226*x63 + x96*(4161798144000.0*Nu + 1759846072320.0*r + 12148770078720.0) - 53501685054374.1
    x228 = x117*x119*x159*x171*x73
    x229 = -18432.0*r*x148 - 2903040.0*x150*x21 + x153 + x157*x63 + x177 + x226 + x96*(20113376778784.3*Nu + 566231040.0*x163 + x165 + 2639769108480.0*x21)
    x230 = x174*x196
    x231 = x215*x25
    x232 = 7680.0*x219
    x233 = 30720.0*x0*x194 + x143*x232 - x224 + x231
    x234 = x190*x36
    x235 = prst**3
    x236 = prst**5
    x237 = prst**7
    x238 = 4.0*x235
    x239 = 6.0*x236
    x240 = x212*x214/(x120*x216 + 2.0)
    x241 = 2.0*pphi*x22
    x242 = pphi*x225
    x243 = 4.0*pphi**3*x15
    y0 = r**3
    y1 = r + 2.0
    y2 = chix1*chix2
    y3 = chiy1*chiy2
    y4 = chiz1*chiz2
    y5 = 2.0*y2 + 2.0*y3 + 2.0*y4
    y6 = X1*X2
    y7 = y5*y6
    y8 = X1**2
    y9 = chix1**2
    y10 = chiy1**2
    y11 = chiz1**2
    y12 = y10 + y11 + y9
    y13 = y12*y8
    y14 = X2**2
    y15 = chix2**2
    y16 = chiy2**2
    y17 = chiz2**2
    y18 = y14*(y15 + y16 + y17)
    y19 = y13 + y18
    y20 = y19 + y7
    y21 = y1*y20
    y22 = y0 + y21
    y23 = y22**(-1)
    y24 = r**5
    y25 = y24**(-1)
    y26 = 12.0*Nu
    y27 = X1*chiL1
    y28 = X2*chiL2
    y29 = y27 + y28
    y30 = pphi*y29
    y31 = dSO*y30
    y32 = y0**(-1)
    y33 = -1.40625*Nu - 0.46875
    y34 = pphi**2
    y35 = r**4
    y36 = y35**(-1)
    y37 = 6.0*y36
    y38 = y34*y37
    y39 = Nu**2
    y40 = -2.0859375*Nu - 2.07161458333333*y39 + 0.23046875
    y41 = 12.0*y25
    y42 = y34*y41
    y43 = r**(-6)
    y44 = 20.0*y43
    y45 = pphi**4
    y46 = 0.5859375*Nu + 1.34765625*y39 + 0.41015625
    y47 = y45*y46
    y48 = 0.46875 - 0.28125*Nu
    y49 = -0.2734375*Nu - 0.798177083333333*y39 - 0.23046875
    y50 = -0.3515625*Nu + 0.29296875*y39 - 0.41015625
    y51 = y45*y50
    y52 = X1 - X2
    y53 = y27 - y28
    y54 = pphi*y53
    y55 = y52*y54
    y56 = Chi1*X1
    y57 = Chi2*X2
    y58 = y56 + y57
    y59 = y58**2
    y60 = y20 - y59
    y61 = y34*y52
    y62 = y60*y61
    y63 = y20*y52
    y64 = y56 - y57
    y65 = y12*y8 - y18 - y58*y64
    y66 = -0.125*y13 - 0.125*y18 + 0.125*y59 + 0.5*y65*(0.5 - X2) - 0.125*y7
    y67 = y34*y66
    y68 = 5.0*X1
    y69 = -5.0*X2 + y68
    y70 = y13 - y18
    y71 = y65*y69
    y72 = r**2
    y73 = 6.0*y72
    y74 = 2.0*X1
    y75 = X2*y5
    y76 = 2.0*y13 + 2.0*y18 + y74*y75
    y77 = y22**(-2)
    y78 = 3.0*Nu
    y79 = y36*y78
    y80 = y72**(-1)
    y81 = 0.71875*Nu - 0.09375
    y82 = y32*y34
    y83 = 2.0*y82
    y84 = 3.0*y36
    y85 = y34*y84
    y86 = 4.0*y25
    y87 = y29*(-y32*(-11.0625*Nu + 1.13541666666667*y39 - 0.15625) - y33*y83 - y40*y85 - y47*y86 - y80*y81)
    y88 = 0.34375*Nu + 0.09375
    y89 = -y32*(-0.0625*Nu + 1.07291666666667*y39 + 0.15625) - y48*y83 - y49*y85 - y51*y86 - y80*y88
    y90 = y60*(0.416666666666667 - 0.833333333333333*X2)
    y91 = y53*(-y32*(0.0833333333333333*y63 + y90) + 0.375*y36*y62)
    y92 = y29*(y32*(1.25*y13 + 1.25*y18 - 0.75*y59 - 0.0833333333333333*y69*y70 + 1.25*y7 + 0.333333333333333*y71) - y67*y84)
    y93 = Nu*y32
    y94 = r**(-1)
    y95 = y34*y80
    y96 = y36*y45
    y97 = y29*(y33*y95 + y40*y82 + y46*y96 + y80*(-5.53125*Nu + 0.567708333333333*y39 - 0.078125) + y81*y94 + 1.75)
    y98 = y48*y95 + y49*y82 + y50*y96 + y80*(-0.03125*Nu + 0.536458333333333*y39 + 0.078125) + y88*y94 + 0.25
    y99 = y32*y60
    y100 = y53*(-0.125*y61*y99 + y80*(0.0416666666666667*y63 + 0.5*y90))
    y101 = y66*y82
    y102 = y29*(y101 + y80*(-0.625*y13 - 0.625*y18 + 0.375*y59 + 0.0416666666666667*y69*y70 - 0.625*y7 - 0.166666666666667*y71))
    y103 = prst**4
    y104 = r**(-4.5)
    y105 = Nu*y104
    y106 = r**(-3.5)
    y107 = prst**6
    y108 = Nu*y107
    y109 = r**(-2.5)
    y110 = prst**8
    y111 = Nu*y110
    y112 = Nu*y94
    y113 = 0.121954868780449*y110
    y114 = 8.0*Nu - 6.0*y39
    y115 = y103*y114
    y116 = Nu**3
    y117 = 92.7110442849544*Nu + 10.0*y116 - 131.0*y39
    y118 = y103*y117
    y119 = -2.78300763695006*Nu + 6.0*y116 - 5.4*y39
    y120 = y107*y119
    y121 = Nu**4
    y122 = -33.9782122170436*Nu + 188.0*y116 - 14.0*y121 - 89.5298327361234*y39
    y123 = y107*y122
    y124 = 1.38977750996128*Nu + 3.42857142857143*y116 - 6.0*y121 + 3.33842023648322*y39
    y125 = y110*y124
    y126 = jnp.log(r)
    y127 = Nu*(452.542166996693 - 51.6952380952381*y126) + 602.318540416564*y116 + y39*(118.4*y126 - 1796.13660498019)
    y128 = y103*y36
    y129 = r*y21 + y35
    y130 = y129**(-1)
    y131 = y29**2
    y132 = y130*y131
    y133 = y132*y94
    y134 = y133*y34
    y135 = y60*y80
    y136 = y65*(0.75 - 1.5*X2)
    y137 = y60*(-1.75*Nu - 0.9375)
    y138 = y19 - y7
    y139 = y138 - y64**2
    y140 = y139*(0.1875 - 0.75*Nu)
    y141 = -98.0*Nu - 43.0
    y142 = y52*y65
    y143 = 264.0*y39
    y144 = -1610.0*Nu + y143 + 375.0
    y145 = 0.00260416666666667*y60
    y146 = -1090.0*Nu + 152.0*y39 + 219.0
    y147 = 0.0078125*y139
    y148 = -0.5*y135 + y32*(0.5*y136 + 0.5*y137 + 0.5*y140) + y36*(0.0625*y141*y142 + y144*y145 + y146*y147) + 1.0
    y149 = y20*y80
    y150 = y126**2
    y151 = y150*y39
    y152 = y116*(-163683964.822551*r - 17833256.898555*y72 - 1188987459.03162)
    y153 = y39*(-39321600.0*a6*(3.0*r + 59.0) + 745857848.115604*a6 + 122635399361.987*r - 6178501407.53758*y0 + 1426660551.8844*y24 - 3089250703.76879*y35 + 2064783811.32587*y72 + 276057889687.011)
    y154 = 588.0*Nu + 1079.0
    y155 = 756.0*Nu
    y156 = y155 + 1079.0
    y157 = y0*y156
    y158 = -38842241.4769507*Nu + 240.0*r*(-7466.27061066206*Nu - 3024.0*y39 + 17264.0) + 1920.0*y154*y72 + 480.0*y156*y35 + 960.0*y157 + 161280.0*y24 - 1882456.23663972*y39 + 13447680.0
    y159 = Nu*y126
    y160 = y158*y159
    y161 = 8.0*r
    y162 = 2.0*y0 + y161 + 4.0*y72 + 16.0
    y163 = 7680.0*a6
    y164 = 128.0*r
    y165 = 7704.0*r
    y166 = 148.04406601634*r
    y167 = 113485.217444961*r
    y168 = Nu*(y163*(y162 + y35) + y164*(13218.7851094412*r + 4264.6962773603*y0 - 6852.34813868015*y35 + 8529.39255472061*y72 - 33722.4297811176) + y166*(1926.0*y0 + y165 + 349.0*y35 + 3852.0*y72 + 36400.0) + y167*(y162 - y35))
    y169 = (241555486248.807*y121 + 67645734912.0*y151 + 1120.0*y152 + 7.0*y153 + 32768.0*y160 + 53760.0*y168 + 13212057600.0*y24)**(-1)
    y170 = 336.0*r + y155 + 407.0
    y171 = 2048.0*Nu*y126*y170 + 28.0*Nu*(1920.0*a6 + 733955.307463037) - 7.0*r*(938918.400156317*Nu - 185763.092693281*y39 - 245760.0) - 5416406.59541186*y39 - 3440640.0
    y172 = y169*y171
    y173 = y172*y35
    y174 = 0.000130208333333333*y149 + y173
    y175 = y174**(-4)
    y176 = r*y150
    y177 = -630116198.873299*Nu - 197773496.793534*y39 + 5805304367.87913
    y178 = y177*y72
    y179 = -2675575.66847905*Nu - 138240.0*y39 - 5278341.3229329
    y180 = y0*y179
    y181 = Nu*(-2510664218.28128*Nu + 14515200.0*y116 - 42636451.6032331*y39 + 1002013764.01019)
    y182 = (1 - 0.496948781616935*Nu)**2
    y183 = 43393301259014.8*Nu + 5927865218923.02*y116 + 86618264430493.3*y182 + 43133561885859.3*y39 + 188440788778196.0
    y184 = r*y183
    y185 = 14700.0*Nu + 42911.0
    y186 = 283115520.0*y185
    y187 = -1698693120.0*Nu*(11592.0*Nu + 69847.0) + 49152.0*r*(409207698.136075*Nu + 102574080.0*y39 - 2119671837.36038) + 879923036160.0*y0 + y186*y72
    y188 = y126*y187
    y189 = y176 - 1.59227685093395e-9*y178 - 1.67189069348064e-7*y180 + 9.55366110560367e-9*y181 + 1.72773095804465e-13*y184 + 1.72773095804465e-13*y188
    y190 = y189**2
    y191 = Nu*r
    y192 = Nu*y72
    y193 = r*y39
    y194 = r*y185
    y195 = y39*y72
    y196 = 5041721180160.0*y39 - 104186110149937.0
    y197 = -25392914995744.3*Nu - r*y186 - y196 - 879923036160.0*y72
    y198 = y126*y197
    y199 = -0.0438084424460039*Nu - 0.143521050466841*r + 0.0244692826489756*y116 + 0.0210425293255724*y150 + 0.0385795738434214*y191 + 0.00941289164152486*y192 + 0.00662650629087394*y193 - 1.18824456940711e-6*y194 + 0.000486339502879429*y195 - 3.63558293513537e-15*y198 + 0.291062041428379*y39 + 0.0185696317637669*y72 + 1
    y200 = y199**(-2)
    y201 = 4.0*y39
    y202 = 0.0625*y69*y70*(18.0*Nu - 1.0) - 0.03125*(-33.0*Nu + 32.0*y39 - 5.0)*(5.0*y13 + 5.0*y18 + y68*y75) - 0.03125*(-5.0*Nu + y201 + 1.0)*(15.0*y13 + 15.0*y18 - 15.0*y7)
    y203 = y175*y190*y200*y202
    y204 = y103*y203
    y205 = r**(-13)
    y206 = y20 + y72
    y207 = y206**4
    y208 = y205*y207
    y209 = prst**2
    y210 = y174**(-2)
    y211 = 1822680546449.21*y39
    y212 = 5787938193408.0*y150
    y213 = -12049908701745.2*Nu + r*y211 - 39476764256925.6*r + 6730497718123.02*y116 + 10611661054566.2*y191 + 2589101062873.81*y192 - 326837426.241486*y194 + 133772083200.0*y195 - y198 + y212 + 80059249540278.2*y39 + 5107745331375.71*y72 + 275059053208689.0
    y214 = y213**(-1)
    y215 = y209*y210*y214
    y216 = 0.125*y70
    y217 = 4.0*Nu
    y218 = 3.0*y7
    y219 = 3.0*y13 + 3.0*y18
    y220 = -y218 + y219
    y221 = 0.0625*y220
    y222 = 0.03125*y70
    y223 = y52*(26.0*Nu + 449.0)
    y224 = y20*(-1171.0*Nu - 861.0)
    y225 = y138*(115.0*Nu + y201 - 37.0)
    y226 = 5787938193408.0*y176 - 9216.0*y178 - 967680.0*y180 + 55296.0*y181 + y184 + y188
    y227 = y226**(-1)
    y228 = y227*y24
    y229 = y213*y228
    y230 = 7680.0*y172
    y231 = y149 + y229*y230 + y32*(y20*(y78 + 2.8125) + y216*(-21.0*X1 + 21.0*X2) + y221*(y217 - 1.0)) + y36*(y222*y223 + 0.015625*y224 + 0.015625*y225)
    y232 = y226*y231
    y233 = y215*y232
    y234 = y206**2
    y235 = y234*y25
    y236 = 1.69542100694444e-8*y235
    y237 = -y1*y134 + 147.443752990146*y103*y105 - 11.3175085791863*y106*y108 + 1.48275342024365*y109*y111 + y112*y113 + y115*y80 + y118*y32 + y120*y80 + y123*y32 + y125*y80 + y127*y128 + y148*y95 + 1.27277314139085e-19*y204*y208 + y233*y236 + 1.0
    y238 = 2.0*y94
    y239 = y149*(y238 + 1.0) + 1.0
    y240 = y239**(-1)
    y241 = -y69*y70
    y242 = y138*(y217 + 1.0)
    y243 = y36*(1.125*y13 + 1.125*y18 + 0.25*y241 + 0.125*y242 + 1.125*y7)
    y244 = -39.0*X1 + 39.0*X2
    y245 = y222*y244
    y246 = 7.0*Nu
    y247 = X1*y5
    y248 = 25.0*X2*y247 + 25.0*y13 + 25.0*y18
    y249 = 0.015625*y248
    y250 = 0.015625*y220
    y251 = y25*(y245*(2.0*Nu - 3.0) - y249*(y246 + 9.0) + y250*(-27.0*Nu + 28.0*y39 - 3.0))
    y252 = 33.0*X1 - 33.0*X2
    y253 = y252*y65
    y254 = y60*(y246 - 31.0)
    y255 = y139*(-y217 - 3.0)
    y256 = y36*(0.0625*y253 + 0.125*y254 + 0.0625*y255)
    y257 = 0.125*y142
    y258 = y25*(y145*(2870.0*Nu - y143 + 561.0) + y147*(1166.0*Nu - 328.0*y39 - 171.0) + y257*(68.0*Nu - 1.0))
    y259 = y149 + 7680.0*y173 + y243 + y251 + y256 + y258 + y99
    y260 = y240*y259
    y261 = y237*y260
    y262 = y261**(-1.5)
    y263 = -y76
    y264 = 4.0*y94 + 2.0
    y265 = y20*y32
    y266 = y263*y36 - y264*y265
    y267 = y239**(-2)
    y268 = y259*y267
    y269 = y237*y268
    y270 = y218 + y219 - 3.0*y59
    y271 = 4.5*X2
    y272 = 10.0*Nu - 15.0
    y273 = 35.0*Nu
    y274 = y273 + 45.0
    y275 = -135.0*Nu + 140.0*y39 - 15.0
    y276 = 340.0*Nu - 5.0
    y277 = 1320.0*y39
    y278 = 14350.0*Nu - y277 + 2805.0
    y279 = 5830.0*Nu - 1640.0*y39 - 855.0
    y280 = 2048.0*y170
    y281 = -6572428.80109422*Nu + y112*y280 + 688128.0*y159 + 1300341.64885296*y39 + 1720320.0
    y282 = y171*y35
    y283 = y121 + 0.28004222119933*y151 + 4.63661586574928e-9*y152 + 2.8978849160933e-11*y153 + 1.35654132757922e-7*y160 + 2.22557561555966e-7*y168 + 0.0546957463279941*y24
    y284 = y283**(-2)
    y285 = y116*(-5706642207.53758*r - 26189434371.6082)
    y286 = y126*y94
    y287 = y286*y39
    y288 = y39*(-117964800.0*a6 + 4129567622.65173*r - 12357002815.0752*y0 + 7133302759.42198*y35 - 18535504222.6128*y72 + 122635399361.987)
    y289 = y156*y72
    y290 = -1791904.9465589*Nu + 3840.0*r*y154 + 1920.0*y157 + 2880.0*y289 + 806400.0*y35 - 725760.0*y39 + 4143360.0
    y291 = y159*y290
    y292 = y112*y158
    y293 = 4.0*y0
    y294 = y161 + y73 + 8.0
    y295 = Nu*(3740417.71815805*r + 1057984.42953951*y0 + y163*(y293 + y294) + y164*(17058.7851094412*r - 27409.3925547206*y0 + 12794.0888320809*y72 + 13218.7851094412) + y166*(1396.0*y0 + y165 + 5778.0*y72 + 7704.0) + y167*(-y293 + y294) - 938918.400156317*y35 + 2115968.85907902*y72 + 2888096.47013111)
    y296 = y284*(7.0*y285 + 135291469824.0*y287 + 7.0*y288 + 32768.0*y291 + 32768.0*y292 + 53760.0*y295 + 66060288000.0*y35)
    y297 = y282*y296
    y298 = 1.31621673590926e-19*y297
    y299 = 30720.0*y0*y169*y171 + 7680.0*y169*y281*y35 - y25*(0.25*y253 + 0.5*y254 + 0.25*y255) - y25*(4.5*y13 + 4.5*y18 + y241 + 0.5*y242 + y247*y271) + y263*y32 - y270*y36 - y298 - y43*(y145*y278 + y147*y279 + y257*y276) - y43*(y245*y272 - y249*y274 + y250*y275)
    y300 = y237*y240
    y301 = r**(-5.5)
    y302 = Nu*y103
    y303 = Nu*y80
    y304 = 2.0*y32
    y305 = 118.4*y39
    y306 = -51.6952380952381*Nu*y94 + y305*y94
    y307 = y103*y127
    y308 = y129**(-2)
    y309 = r*y20
    y310 = y21 + y293 + y309
    y311 = 0.5*y65
    y312 = 0.5*y60
    y313 = 0.25*y65
    y314 = y313*y52
    y315 = 0.0104166666666667*y60
    y316 = 0.03125*y139
    y317 = -y25*(y141*y314 + y144*y315 + y146*y316) + y32*y60 - y36*(0.5*y139*(0.5625 - 2.25*Nu) + y311*(2.25 - y271) + y312*(-5.25*Nu - 2.8125))
    y318 = r**(-14)
    y319 = y204*y207
    y320 = r**(-12)
    y321 = y206**3
    y322 = 5178202125747.62*Nu
    y323 = 267544166400.0*y39
    y324 = 11575876386816.0*y94
    y325 = y126*y324
    y326 = y126*(4161798144000.0*Nu + 1759846072320.0*r + 12148770078720.0)
    y327 = y197*y94
    y328 = 5807150888816.34*Nu + r*y322 + r*y323 + 10215490662751.4*r + y211 + y325 + y326 - y327 - 53501685054374.1
    y329 = y199**(-3)
    y330 = y328*y329
    y331 = y103*y175*y202
    y332 = y190*y331
    y333 = y208*y332
    y334 = 9.25454462627843e-34*y333
    y335 = y187*y94
    y336 = y126*(20113376778784.3*Nu + 566231040.0*y194 + y196 + 2639769108480.0*y72)
    y337 = r*y177
    y338 = y179*y72
    y339 = 11575876386816.0*y126 + y183 + y212 + y335 + y336 - 18432.0*y337 - 2903040.0*y338
    y340 = y233*y234
    y341 = y210*y232
    y342 = y209*y341
    y343 = y200*y342
    y344 = y328*y343
    y345 = 2.24091649004576e-37*y235
    y346 = y174**(-5)
    y347 = y263*y32
    y348 = y169*y35
    y349 = y281*y348
    y350 = y0*y172
    y351 = -y298 + y347 + 7680.0*y349 + 30720.0*y350
    y352 = y346*y351
    y353 = y200*y208
    y354 = y202*y353
    y355 = y103*y190
    y356 = y354*y355
    y357 = 6.62902677807736e-23*y356
    y358 = y209*y214*y232
    y359 = y174**(-3)
    y360 = y351*y359
    y361 = y358*y360
    y362 = -63.0*X1 + 63.0*X2
    y363 = y26 - 3.0
    y364 = y228*y230
    y365 = y169*y281
    y366 = y213*y227
    y367 = y190**(-1)
    y368 = y339*y367
    y369 = y213*y24
    y370 = y172*y369
    y371 = 2.29252167428035e-22*y370
    y372 = y171*y296
    y373 = 38400.0*y173*y366 + 7680.0*y229*y365 - 1.31621673590926e-19*y229*y372 - y25*(y216*y223 + 0.0625*y224 + 0.0625*y225) + y328*y364 + y347 - y36*(y20*(9.0*Nu + 8.4375) + y216*y362 + y221*y363) - y368*y371
    y374 = 39.6112800271521*Nu*y104*y107 + y1*y130*y131*y34*y80 + y1*y131*y308*y310*y34*y94 + 1.01821851311268e-18*y103*y175*y190*y200*y202*y320*y321 + 7.59859378406358e-45*y103*y175*y200*y202*y205*y207*y226*y339 + y103*y306*y36 - 3.70688355060912*y106*y111 - y113*y303 - y115*y304 - 3.0*y117*y128 - y120*y304 - y123*y84 - y125*y304 - y134 - y148*y83 + 6.78168402777778e-8*y206*y209*y210*y214*y226*y231*y36 + 1.69542100694444e-8*y209*y210*y214*y226*y234*y25*y373 + 1.69542100694444e-8*y209*y210*y214*y231*y234*y25*y339 - 4.41515887225116e-12*y235*y361 - 663.496888455656*y301*y302 - y307*y86 + y317*y34*y80 - 1.65460508380811e-18*y318*y319 - y330*y334 - 8.47710503472222e-8*y340*y43 - y344*y345 - y352*y357
    y375 = y260*y374 - y266*y269 + y299*y300
    y376 = 12.0*y13 + 12.0*y18 + 12.0*y7
    y377 = -4.0*y13 - 4.0*y18 - 4.0*y7
    y378 = 8.0*y94 + 4.0
    y379 = -y265*y378 + y36*y377
    y380 = r**(-7)
    y381 = y278*y60
    y382 = 0.015625*y139
    y383 = 0.0625*y244*y70
    y384 = 0.03125*y248
    y385 = 0.03125*y220
    y386 = 20.0*Nu
    y387 = 6.0*y13 + 6.0*y18 + 6.0*y7
    y388 = y36*y387
    y389 = 10569646080.0*y112 - 7680.0*y280*y303
    y390 = 2.63243347181853e-19*y296
    y391 = y281*y390
    y392 = 1.99471718230171e-8*(5.17401430341932e-11*y285 + y287 + 5.17401430341932e-11*y288 + 2.42203000992063e-7*y291 + 2.42203000992063e-7*y292 + 3.97364298502604e-7*y295 + 0.48828125*y35)**2/y283**3
    y393 = 135291469824.0*y39*y80
    y394 = 12.0*y72
    y395 = 12.0*r + 8.0
    y396 = 1.31621673590926e-19*y284*(53760.0*Nu*(8463875.43631609*r - 7511347.20125054*y0 + y163*(y394 + y395) + y164*(25588.1776641618*r - 82228.1776641618*y72 + 17058.7851094412) + y166*(11556.0*r + 4188.0*y72 + 7704.0) + y167*(-y394 + y395) + 6347906.57723707*y72 + 7480835.43631609) + 264241152000.0*y0 + 65536.0*y112*y290 - 39946495452.7631*y116 - y126*y393 - 32768.0*y158*y303 + 32768.0*y159*(2257920.0*Nu + 5760.0*r*y156 + 3225600.0*y0 + 5760.0*y289 + 4143360.0) + 7.0*y39*(-37071008445.2255*r + 28533211037.6879*y0 - 37071008445.2255*y72 + 4129567622.65173) + y393)
    y397 = 61440.0*y0*y365 - 1.05297338872741e-18*y0*y372 + 92160.0*y172*y72 + y282*y392 - y282*y396 + y348*y389 - y35*y391 + y388
    y398 = 9.0*X2
    y399 = y1*y132
    y400 = y131*y34
    y401 = y308*y400
    y402 = y1*y94
    y403 = y131*y308*y310
    y404 = (0.230275523363951*Nu + 0.031457442188381*y116 + 0.0614297810037367*y126 + 0.0307148905018684*y150 + 0.459657725867658*y182 + 5.30670671930294e-15*y335 + 5.30670671930294e-15*y336 - 9.78132182501918e-11*y337 - 1.54055818744052e-8*y338 + 0.228897162687159*y39 + 1)**2
    y405 = y331*y353
    y406 = 11575876386816.0*y80
    y407 = 8323596288000.0*Nu + 24297540157440.0
    y408 = -y126*y406 + 1759846072320.0*y126 + y197*y80 + y322 + y323 + y406 + y94*(3519692144640.0*r + y407) + 10215490662751.4
    y409 = y207*y318
    y410 = y330*y332
    y411 = y320*y321
    y412 = (0.108541457767442*Nu + 0.190937736865098*r + 0.0967857763822762*y191 + 0.00500066803742898*y193 + 0.216364706551791*y286 + 1.86910000868887e-14*y326 - 1.86910000868887e-14*y327 + 0.0340677222520525*y39 - 1)**2
    y413 = 11614301777632.7*Nu - 5806080.0*r*y179 + y126*(5279538216960.0*r + y407) - y187*y80 + y324 + y325 + 3645361092898.41*y39 + y94*(40226753557568.7*Nu + 1132462080.0*y194 + 10083442360320.0*y39 + 5279538216960.0*y72 - 208372220299875.0) - 107003370108748.0
    y414 = y200*y409
    y415 = y226*y339
    y416 = y331*y415
    y417 = y200*y411
    y418 = y208*y330
    y419 = y215*y236
    y420 = y215*y339
    y421 = y231*y420
    y422 = y206*y36
    y423 = 1.35633680555556e-7*y422
    y424 = y234*y43
    y425 = 1.69542100694444e-7*y424
    y426 = y209*y235
    y427 = y231*y339*y426
    y428 = 4.48183298009152e-37*y200*y328
    y429 = y210*y428
    y430 = y202*y352*y355
    y431 = (-4.28455968720463e-24*y297 + 3.25520833333333e-5*y347 + 0.25*y349 + y350)**2
    y432 = y235*y358
    y433 = 8.83031774450231e-12*y360
    y434 = y214*y433
    y435 = y226*y373
    y436 = y215*y435
    y437 = 3.39084201388889e-8*y235
    y438 = y426*y435
    y439 = y228*y328
    y440 = 76800.0*y227
    y441 = 4.5850433485607e-22*y368
    y442 = y171*y229
    y443 = y261**(-0.5)
    y444 = (y149*y264 + 2.0)**(-1)
    y445 = 12.0*y209
    y446 = y114*y80
    y447 = y117*y32
    y448 = 30.0*y103
    y449 = y119*y80
    y450 = y122*y32
    y451 = y124*y80
    y452 = y127*y36
    y453 = y203*y208
    y454 = y214*y341
    y455 = y437*y454
    y456 = prst**3
    y457 = y105*y456
    y458 = prst**5
    y459 = Nu*y106*y458
    y460 = prst**7
    y461 = Nu*y460
    y462 = y109*y461
    y463 = y112*y460
    y464 = 0.00678224732971111*y456
    y465 = 0.0101733709945667*y458
    y466 = y451*y460
    y467 = y453*y456
    y468 = prst*y454
    y469 = y262*y267*(y174 + 0.000130208333333333*y243 + 0.000130208333333333*y251 + 0.000130208333333333*y256 + 0.000130208333333333*y258 + 0.000130208333333333*y99)**2
    y470 = y36*y46
    y471 = 12.0*y34
    y472 = 2.0*pphi*y80
    y473 = pphi*y304
    y474 = pphi**3
    y475 = 4.0*y474
    y476 = y33*y472 + y40*y473 + y470*y475
    y477 = y36*y50
    y478 = y472*y48 + y473*y49 + y475*y477
    y479 = pphi*y1
    y480 = 4.0*y456
    y481 = 6.0*y458
    y482 = prst*y455 + y446*y480 + y447*y480 + y449*y481 + y450*y481 + y452*y480 + 589.775011960583*y457 - 67.9050514751178*y459 + 11.8620273619492*y462 + 0.975638950243592*y463 + 8.0*y466 + 5.09109256556341e-19*y467
    y483 = y266*y268
    y484 = y240*y299
    y485 = 16.0*y25
    y486 = y259*y262*y375/(y149*y378 + 4.0)
    y487 = dSO*y29
    y488 = 4.0*pphi*y32
    y489 = pphi*y37
    y490 = y474*y485
    y491 = y52*y53
    y492 = y34*y491
    y493 = y132*y238
    y494 = -2.0*pphi*y148*y80 + y479*y493
    y495 = -y494

    # Evaluate Hamiltonian
    H,_ = evaluate_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,calib_coeffs=calib_coeffs)

    # Evaluate Heff Jacobian
    dHeffdr = x13*(-dSO*x15*x16*x20 + x20*(x25*(1.25*x4 - 0.75*x50 - 0.0833333333333333*x58*x60 + 0.333333333333333*x61 + 1.25*x7 + 1.25*x8) - x32*x57) + x20*(-x22*x23 - x24*x28 - x25*(-11.0625*Nu + 1.13541666666667*x29 - 0.15625) - x30*x32 - x33*x38) + x45*(0.375*x15*x51*x52 - x25*(0.0833333333333333*x53 + x54)) + x46*(-x22*x39 - x25*(-0.0625*Nu + 1.07291666666667*x29 + 0.15625) - x28*x40 - x32*x41 - x38*x42)) + 0.5*x214*(x198*x201*(30720.0*x0*x123*x142 + 7680.0*x14*x142*x219 - x15*(x182 + x183 - 3.0*x50) + x215*x25 - x218*(x113*(14350.0*Nu - 1320.0*x29 + 2805.0) + x115*(5830.0*Nu - 1640.0*x29 - 855.0) + x211*(340.0*Nu - 5.0)) - x218*(x204*(10.0*Nu - 15.0) - x206*(35.0*Nu + 45.0) + x207*(-135.0*Nu + 140.0*x29 - 15.0)) - x224 - x36*(0.25*x208 + 0.5*x209 + 0.25*x210) - x36*(X1*x2*x217 + x202 + 0.5*x203 + 4.5*x7 + 4.5*x8)) - x198*x212*(-x10*x216*x25 + x15*x215)/x200**2 + x213*(-663.496888455656*Nu*r**(-5.5)*x73 - Nu*x22*x83 + 39.6112800271521*Nu*x74*x76 + x1*x100*x101*x22*x26 + x1*x101*x26*x63*(r*x10 + x11 + x221)/x99**2 - x103 - x116*x28 + 7.59859378406358e-45*x117*x119*x146*x169*x171*x190*x229*x73 + 6.78168402777778e-8*x118*x15*x174*x175*x179*x190*x196 - 9.25454462627843e-34*x146*x227*x228/x168**3 + x15*x73*(118.4*x220 - 51.6952380952381*x82) - 2.24091649004576e-37*x169*x173*x175*x190*x227*x230*x36 + 1.69542100694444e-8*x173*x174*x175*x179*x190*x36*(x142*x193*x232 + 38400.0*x144*x192 - x15*(x10*(9.0*Nu + 8.4375) + x180*(-63.0*X1 + 63.0*X2) + x185*(12.0*Nu - 3.0)) + x191*x195*x227*x35 - x193*x223 + x231 - x36*(x180*x187 + 0.0625*x188 + 0.0625*x189) - 2.29252167428035e-22*x178*x194*x229*x35/x159) + 1.69542100694444e-8*x173*x174*x175*x179*x196*x229*x36 - 8.47710503472222e-8*x197*x218 + x22*x26*(-x15*(x104*(-5.25*Nu - 2.8125) + x105*(2.25 - x217) + x108*(0.5625 - 2.25*Nu)) + x25*x51 - x36*(0.03125*x107*x114 + 0.25*x110 + 0.0104166666666667*x112*x51)) - x225*x95 - x31*x76*x92 - x37*x73*x97 - 3.70688355060912*x77*x81 - 2.0*x84*x88 - 3.0*x87*x98 - 2.0*x89*x93 - 4.41515887225116e-12*x173*x179*x230*x233*x234/x145**3 - 6.62902677807736e-23*x169*x228*x233/x145**5 + 1.01821851311268e-18*x118**3*x146*x159*x169*x171*x73/r**12 - 1.65460508380811e-18*x172/r**14)) - (x10 + 3.0*x21)*(pphi*x66 + pphi*x70 + pphi*x72 + x20*x62 + x45*x67)/x12**2

    dHeffdphi = 0

    dHeffdpr = x240*(11.8620273619492*Nu*x237*x79 + 3.39084201388889e-8*prst*x173*x175*x179*x196*x234 + 5.09109256556341e-19*x117*x119*x146*x159*x169*x171*x235 + x15*x238*x97 + 8.0*x22*x237*x94 + 589.775011960583*x235*x75 - 67.9050514751178*x236*x78 + 0.975638950243592*x237*x82 + x238*x25*x87 + x238*x85 + x239*x25*x92 + x239*x90)

    dHeffdpphi = x13*(x19*x62 + 2.0*x19*x71 + x20*(x24*x241 + x242*x30 + x243*x33) + x44*x67 - 0.25*x44*x69 + x46*(x241*x40 + x242*x41 + x243*x42) + x66 + x70 + x72) + x240*(-pphi*x1*x102*x199 + 2.0*pphi*x116*x22)

    # Evaluate Heff Hessian
    d2Heffdr2 = y23*(y25*y26*y31 + y30*(y36*(-3.75*y13 - 3.75*y18 + 2.25*y59 + 0.25*y69*y70 - 3.75*y7 - y71) + y41*y67) + y30*(y32*(1.4375*Nu - 0.1875) + y33*y38 + y36*(-33.1875*Nu + 3.40625*y39 - 0.46875) + y40*y42 + y44*y47) + y54*(-1.5*y25*y62 + y36*(y60*(1.25 - 2.5*X2) + 0.25*y63)) + y55*(y32*(0.6875*Nu + 0.1875) + y36*(-0.1875*Nu + 3.21875*y39 + 0.46875) + y38*y48 + y42*y49 + y44*y51)) - 0.25*y262*y375**2 + 0.5*y443*(-y237*y267*y299*y379 + 2.0*y237*y259*y266**2/y239**3 + y240*y374*(61440.0*y0*y169*y171 + 15360.0*y169*y281*y35 - y25*(y252*y311 + y254 + 0.5*y255) - y25*(9.0*y13 + 9.0*y18 + 2.0*y241 + y242 + y247*y398) - 2.63243347181853e-19*y297 + y32*y377 - y36*(y387 - 6.0*y59) - y43*(y272*y383 - y274*y384 + y275*y385) - y43*(y276*y314 + y279*y382 + 0.00520833333333333*y381)) + y260*(3649.23288650611*r**(-6.5)*y302 - 2.0*y1*y403*y95 - 8.0*y103*y25*y306 - 7.91520185839956e-48*y103*y352*y354*y415 + 12.9740924271319*y105*y110 - 178.250760122184*y108*y301 + 0.243909737560898*y111*y32 + 6.0*y114*y128 + y118*y41 + y120*y37 + y123*y41 + y125*y37 + y128*(51.6952380952381*Nu*y80 - y305*y80) + 2.0*y132*y95 + y148*y38 + 1.62760416666667e-6*y175*y431*y432 + 1.16714400523217e-40*y200*y232*y328*y360*y426 - 2.5455462827817e-17*y204*y205*y321 - 6.103515625e-7*y206*y233*y25 + 7.59859378406358e-45*y226*y405*y413 + y226*y419*(y169*y229*y389 - y171*y390*y439 - y172*y24*y328*y441 - 2.29252167428035e-21*y173*y213*y368 + y173*y328*y440 + y213*y349*y440 - y229*y391 + y25*(y20*(36.0*Nu + 33.75) + 0.25*y220*y363 + 0.5*y362*y70) - 1.31621673590926e-18*y297*y366 + 153600.0*y350*y366 + y364*y408 - y365*y369*y441 + 15360.0*y365*y439 - y367*y371*y413 + 7.85795675813156e-45*y368*y369*y372 + y388 + y392*y442 - y396*y442 + y43*(0.0625*y138*(575.0*Nu + 20.0*y39 - 185.0) + 0.0625*y20*(-5855.0*Nu - 4305.0) + y216*y52*(130.0*Nu + 2245.0)) + 2.81299777100766e-6*y370*y404/y189**3) + y231*y413*y419 + 1.35633680555556e-7*y233*y32 + 4.66406554828496e-24*y235*y329*y342*y412 + y238*y310*y401 + y307*y44 - 4.0*y317*y82 - y329*y334*y408 + 5.08626302083333e-7*y340*y380 - y343*y345*y408 - 1.79273319203661e-36*y344*y422 + 2.24091649004576e-36*y344*y424 - y346*y357*y397 - 4.41515887225116e-12*y359*y397*y432 - 3.53212709780093e-11*y361*y422 + 4.41515887225116e-11*y361*y424 + y373*y420*y437 - y399*y83 + y401*y402*(y14*(2.0*y15 + 2.0*y16 + 2.0*y17) + y394 + y6*(4.0*y2 + 4.0*y3 + 4.0*y4) + y8*(2.0*y10 + 2.0*y11 + 2.0*y9)) + 2.69825540021952e-16*y404*y405 + 2.40618160283239e-32*y409*y410 - 1.48072714020455e-32*y410*y411 - 1.97563438385653e-43*y414*y416 + 1.72354696230011e-21*y414*y430 + 1.21577500545017e-43*y416*y417 - 1.10501271569469e-58*y416*y418 - 1.06064428449238e-21*y417*y430 + 9.64015065237337e-37*y418*y430 + y421*y423 - y421*y425 + y423*y436 - y425*y436 - y427*y429 - y427*y434 - y429*y438 - y434*y438 + y95*(y25*(y139*(1.125 - 4.5*Nu) + y60*(-10.5*Nu - 5.625) + y65*(4.5 - y398)) - y270*y36 + y43*(y314*(-490.0*Nu - 215.0) + y315*(-8050.0*Nu + y277 + 1875.0) + y316*(-5450.0*Nu + 760.0*y39 + 1095.0))) + 2.88925109089694e-20*y333*y412/y199**4 + 4.07287405245073e-17*y356*y431/y174**6 - 32.0*y400*y402*(y0 + 0.25*y21 + 0.25*y309)**2/y129**3 + 6.10931107867609e-18*y204*y234/r**11 + 2.31644711733135e-17*y319/r**15) - y268*y374*y379 - y269*(y20*y36*(12.0*y94 + 6.0) + y25*y376) + y300*(y25*(y376 - 12.0*y59) + y380*(y314*(1020.0*Nu - 15.0) + 0.015625*y381 + y382*(17490.0*Nu - 4920.0*y39 - 2565.0)) + y380*(y383*(30.0*Nu - 45.0) - y384*(105.0*Nu + 135.0) + y385*(-405.0*Nu + 420.0*y39 - 45.0)) + y397 + y43*(0.25*y139*(-y386 - 15.0) + y312*(y273 - 155.0) + y313*(165.0*X1 - 165.0*X2)) + y43*(22.5*y13 + 0.5*y138*(y386 + 5.0) + 22.5*y18 + 22.5*y7 + y70*(-25.0*X1 + 25.0*X2)))) - y77*(y73 + y76)*(pphi*y87 + pphi*y91 + pphi*y92 - y31*y79 + y55*y89) + (-6.0*r*y77 + 18.0*(0.333333333333333*y13 + 0.333333333333333*y18 + 0.333333333333333*y7 + y72)**2/y22**3)*(pphi*y100 + pphi*y102 + pphi*y97 + y31*y93 + y55*y98)

    d2Heffdphi2 = 0

    d2Heffdpr2 = y259*y443*y444*(1769.32503588175*y105*y209 - 339.525257375589*y106*y302 + 6.82947265356779*y107*y112 + 56.0*y107*y451 + 83.0341915336443*y108*y109 + 1.52732776966902e-18*y209*y453 + y445*y446 + y445*y447 + y445*y452 + y448*y449 + y448*y450 + y455) - 5129029357728.48*y469*(5.74938229854254e-11*y235*y468 + y446*y464 + y447*y464 + y449*y465 + y450*y465 + y452*y464 + y457 - 0.115137213510253*y459 + 0.020112800850135*y462 + 0.00165425616626294*y463 + 0.0135644946594222*y466 + 8.63226223952612e-22*y467)**2

    d2Heffdpphi2 = y23*(6.0*y30*y32*y66 + y30*(y32*(-4.171875*Nu - 4.14322916666667*y39 + 0.4609375) + y470*y471 + y80*(-2.8125*Nu - 0.9375)) + y476*(2.0*y27 + 2.0*y28) + y478*y53*(-2.0*X2 + y74) - 0.75*y55*y99 + y55*(y32*(-0.546875*Nu - 1.59635416666667*y39 - 0.4609375) + y471*y477 + y80*(0.9375 - 0.5625*Nu))) + y259*y443*y444*(y133*(-2.0*r - 4.0) + y80*(-y135 + y32*(y136 + y137 + y140) + y36*(y141*y257 + 0.00520833333333333*y144*y60 + y146*y382) + 2.0)) - 58982400.0*y469*(pphi*y148*y80 - y133*y479)**2

    d2Heffdrdphi = 0

    d2Heffdrdpr = 0.5*y443*(y260*(237.667680162912*Nu*y104*y458 - 2653.98755382262*Nu*y301*y456 + 1.35633680555556e-7*prst*y206*y210*y214*y226*y231*y36 + 3.39084201388889e-8*prst*y210*y214*y226*y234*y25*y373 + 3.39084201388889e-8*prst*y210*y214*y231*y234*y25*y339 - prst*y214*y232*y235*y433 - prst*y235*y341*y428 - 29.655068404873*y106*y461 - 8.0*y114*y32*y456 - 12.0*y117*y36*y456 - 12.0*y119*y32*y458 - 18.0*y122*y36*y458 - 16.0*y124*y32*y460 - y127*y456*y485 + 4.07287405245073e-18*y175*y190*y200*y202*y320*y321*y456 - 3.70181785051137e-33*y175*y190*y202*y418*y456 + 3.03943751362543e-44*y175*y200*y202*y205*y207*y226*y339*y456 - 2.65161071123094e-22*y190*y352*y354*y456 - 6.61842033523243e-18*y203*y409*y456 - 0.975638950243592*y303*y460 + 4.0*y306*y36*y456 - y425*y468) - y482*y483 + y482*y484) - y482*y486

    d2Heffdrdpphi = y23*(-y29*y37*y67 + y30*(-y33*y488 - y40*y489 - y46*y490) + 0.75*y36*y492*y60 - y487*y79 + y491*y89 + y55*(-y48*y488 - y489*y49 - y490*y50) + y87 + y91 + y92) + 0.5*y443*(y260*(-pphi*y493 - y148*y488 + y238*y403*y479 + y317*y472 + y399*y472) - y483*y495 + y484*y495) - y486*y495 - y77*(y20 + 3.0*y72)*(y100 + 2.0*y101*y29 + y102 + y30*y476 + y478*y55 + y487*y93 + y491*y98 - 0.25*y492*y99 + y97)

    d2Heffdphidpr = 0

    d2Heffdphidpphi = 0

    d2Heffdprdpphi = 14745600.0*y469*y482*y494

    # Compute H Hessian
    d2Hdr2 = (-(dHeffdr**2/H**3)*(M**2/nu) + d2Heffdr2/H) * M*M / nu
    d2Hdphi2 = (-(dHeffdphi**2/H**3)*(M**2/nu) + d2Heffdphi2/H) * M*M / nu
    d2Hdpr2 = (-(dHeffdpr**2/H**3)*(M**2/nu) + d2Heffdpr2/H) * M*M / nu
    d2Hdpphi2 = (-(dHeffdpphi**2/H**3)*(M**2/nu) + d2Heffdpphi2/H) * M*M / nu
    d2Hdrdphi = (-(dHeffdr*dHeffdphi/H**3)*(M**2/nu) + d2Heffdrdphi/H) * M*M / nu
    d2Hdrdpr = (-(dHeffdr*dHeffdpr/H**3)*(M**2/nu) + d2Heffdrdpr/H) * M*M / nu
    d2Hdrdpphi = (-(dHeffdr*dHeffdpphi/H**3)*(M**2/nu) + d2Heffdrdpphi/H) * M*M / nu
    d2Hdphidpr = (-(dHeffdphi*dHeffdpr/H**3)*(M**2/nu) + d2Heffdphidpr/H) * M*M / nu
    d2Hdphidpphi = (-(dHeffdphi*dHeffdpphi/H**3)*(M**2/nu) + d2Heffdphidpphi/H) * M*M / nu
    d2Hdprdpphi = (-(dHeffdpr*dHeffdpphi/H**3)*(M**2/nu) + d2Heffdprdpphi/H) * M*M / nu

    return jnp.array([d2Hdr2, d2Hdrdphi, d2Hdrdpr, d2Hdrdpphi, d2Hdrdphi, d2Hdphi2, d2Hdphidpr, d2Hdphidpphi, d2Hdrdpr, d2Hdphidpr, d2Hdpr2, d2Hdprdpphi, d2Hdrdpphi, d2Hdphidpphi, d2Hdprdpphi, d2Hdpphi2])



@numb_jit(nopython=True,cache=True)
def evaluate_dynamics_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,calib_coeffs=None):
    """
    Toy aligned-spin Hamiltonian

    Returns gradient of H, H and xi, to be used in RHS of equations of motion
    """

    # Coordinate definitions
    r,phi = q
    prst,L = p
    chix1,chiy1,chiz1 = chi1_v
    chix2,chiy2,chiz2 = chi2_v

    pphi = L

    # Calibration coeffs if any
    if calib_coeffs is not None:
        a6 = calib_coeffs['a6'].item()
        dSO = calib_coeffs['dSO'].item()


    # Extra quantities used in the Jacobian
    M = m_1 + m_2
    mu = m_1*m_2/(m_1+m_2)
    nu = mu/M
    Nu = nu
    X1 = m_1/M
    X2 = m_2/M
    Chi1 = chi_1
    Chi1x = chix1
    Chi1y = chiy1
    Chi1z = chiz1
    Chi2 = chi_2
    Chi2x = chix2
    Chi2y = chiy2
    Chi2z = chiz2
    chiL1 = chiL_1
    chiL2 = chiL_2
    x0 = r**3
    x1 = r + 2.0
    x2 = 2.0*chix1*chix2 + 2.0*chiy1*chiy2 + 2.0*chiz1*chiz2
    x3 = X2*x2
    x4 = X1*x3
    x5 = X1**2
    x6 = chix1**2 + chiy1**2 + chiz1**2
    x7 = x5*x6
    x8 = X2**2*(chix2**2 + chiy2**2 + chiz2**2)
    x9 = x7 + x8
    x10 = x4 + x9
    x11 = x1*x10
    x12 = x0 + x11
    x13 = x12**(-1)
    x14 = r**4
    x15 = x14**(-1)
    x16 = 3.0*Nu
    x17 = X1*chiL1
    x18 = X2*chiL2
    x19 = x17 + x18
    x20 = pphi*x19
    x21 = r**2
    x22 = x21**(-1)
    x23 = 0.71875*Nu - 0.09375
    x24 = -1.40625*Nu - 0.46875
    x25 = x0**(-1)
    x26 = pphi**2
    x27 = x25*x26
    x28 = 2.0*x27
    x29 = Nu**2
    x30 = -2.0859375*Nu - 2.07161458333333*x29 + 0.23046875
    x31 = 3.0*x15
    x32 = x26*x31
    x33 = 0.5859375*Nu + 1.34765625*x29 + 0.41015625
    x34 = pphi**4
    x35 = r**5
    x36 = x35**(-1)
    x37 = 4.0*x36
    x38 = x34*x37
    x39 = 0.34375*Nu + 0.09375
    x40 = 0.46875 - 0.28125*Nu
    x41 = -0.2734375*Nu - 0.798177083333333*x29 - 0.23046875
    x42 = -0.3515625*Nu + 0.29296875*x29 - 0.41015625
    x43 = X1 - X2
    x44 = x17 - x18
    x45 = pphi*x44
    x46 = x43*x45
    x47 = Chi1*X1
    x48 = Chi2*X2
    x49 = x47 + x48
    x50 = x49**2
    x51 = x10 - x50
    x52 = x26*x43
    x53 = x10*x43
    x54 = x51*(0.416666666666667 - 0.833333333333333*X2)
    x55 = x47 - x48
    x56 = -x49*x55 + x5*x6 - x8
    x57 = -0.125*x4 + 0.125*x50 + 0.5*x56*(0.5 - X2) - 0.125*x7 - 0.125*x8
    x58 = x7 - x8
    x59 = 5.0*X1
    x60 = -5.0*X2 + x59
    x61 = x56*x60
    x62 = Nu*dSO*x25
    x63 = r**(-1)
    x64 = x22*x26
    x65 = x15*x34
    x66 = x19*(x22*(-5.53125*Nu + 0.567708333333333*x29 - 0.078125) + x23*x63 + x24*x64 + x27*x30 + x33*x65 + 1.75)
    x67 = x43*(x22*(-0.03125*Nu + 0.536458333333333*x29 + 0.078125) + x27*x41 + x39*x63 + x40*x64 + x42*x65 + 0.25)
    x68 = x25*x51
    x69 = x52*x68
    x70 = x44*(x22*(0.0416666666666667*x53 + 0.5*x54) - 0.125*x69)
    x71 = x27*x57
    x72 = x19*(x22*(-0.625*x4 + 0.375*x50 + 0.0416666666666667*x58*x60 - 0.166666666666667*x61 - 0.625*x7 - 0.625*x8) + x71)
    x73 = prst**4
    x74 = r**(-4.5)
    x75 = Nu*x74
    x76 = prst**6
    x77 = r**(-3.5)
    x78 = Nu*x77
    x79 = r**(-2.5)
    x80 = prst**8
    x81 = Nu*x80
    x82 = Nu*x63
    x83 = 0.121954868780449*x80
    x84 = 8.0*Nu - 6.0*x29
    x85 = x22*x84
    x86 = Nu**3
    x87 = 92.7110442849544*Nu - 131.0*x29 + 10.0*x86
    x88 = x25*x73
    x89 = -2.78300763695006*Nu - 5.4*x29 + 6.0*x86
    x90 = x22*x89
    x91 = Nu**4
    x92 = -33.9782122170436*Nu - 89.5298327361234*x29 + 188.0*x86 - 14.0*x91
    x93 = x25*x76
    x94 = 1.38977750996128*Nu + 3.33842023648322*x29 + 3.42857142857143*x86 - 6.0*x91
    x95 = x80*x94
    x96 = jnp.log(r)
    x97 = Nu*(452.542166996693 - 51.6952380952381*x96) + x29*(118.4*x96 - 1796.13660498019) + 602.318540416564*x86
    x98 = x15*x73
    x99 = r*x11 + x14
    x100 = x99**(-1)
    x101 = x19**2
    x102 = x100*x101
    x103 = x102*x26*x63
    x104 = 0.5*x51
    x105 = 0.5*x56
    x106 = -x4 + x9
    x107 = x106 - x55**2
    x108 = 0.5*x107
    x109 = x43*x56
    x110 = x109*(-98.0*Nu - 43.0)
    x111 = 264.0*x29
    x112 = -1610.0*Nu + x111 + 375.0
    x113 = 0.00260416666666667*x51
    x114 = -1090.0*Nu + 152.0*x29 + 219.0
    x115 = 0.0078125*x107
    x116 = -x104*x22 + x15*(0.0625*x110 + x112*x113 + x114*x115) + x25*(x104*(-1.75*Nu - 0.9375) + x105*(0.75 - 1.5*X2) + x108*(0.1875 - 0.75*Nu)) + 1.0
    x117 = r**(-13)
    x118 = x10 + x21
    x119 = x118**4
    x120 = x10*x22
    x121 = 756.0*Nu
    x122 = 336.0*r + x121 + 407.0
    x123 = 2048.0*Nu*x122*x96 + 28.0*Nu*(1920.0*a6 + 733955.307463037) - 7.0*r*(938918.400156317*Nu - 185763.092693281*x29 - 245760.0) - 5416406.59541186*x29 - 3440640.0
    x124 = x96**2
    x125 = x124*x29
    x126 = x86*(-163683964.822551*r - 17833256.898555*x21 - 1188987459.03162)
    x127 = x29*(-39321600.0*a6*(3.0*r + 59.0) + 745857848.115604*a6 + 122635399361.987*r - 6178501407.53758*x0 - 3089250703.76879*x14 + 2064783811.32587*x21 + 1426660551.8844*x35 + 276057889687.011)
    x128 = 588.0*Nu + 1079.0
    x129 = x121 + 1079.0
    x130 = x0*x129
    x131 = -38842241.4769507*Nu + 240.0*r*(-7466.27061066206*Nu - 3024.0*x29 + 17264.0) + 1920.0*x128*x21 + 480.0*x129*x14 + 960.0*x130 - 1882456.23663972*x29 + 161280.0*x35 + 13447680.0
    x132 = Nu*x96
    x133 = x131*x132
    x134 = 8.0*r
    x135 = 2.0*x0 + x134 + 4.0*x21 + 16.0
    x136 = 7680.0*a6
    x137 = 128.0*r
    x138 = 7704.0*r
    x139 = 148.04406601634*r
    x140 = 113485.217444961*r
    x141 = Nu*(x136*(x135 + x14) + x137*(13218.7851094412*r + 4264.6962773603*x0 - 6852.34813868015*x14 + 8529.39255472061*x21 - 33722.4297811176) + x139*(1926.0*x0 + x138 + 349.0*x14 + 3852.0*x21 + 36400.0) + x140*(x135 - x14))
    x142 = (67645734912.0*x125 + 1120.0*x126 + 7.0*x127 + 32768.0*x133 + 53760.0*x141 + 13212057600.0*x35 + 241555486248.807*x91)**(-1)
    x143 = x14*x142
    x144 = x123*x143
    x145 = 0.000130208333333333*x120 + x144
    x146 = x145**(-4)
    x147 = r*x124
    x148 = -630116198.873299*Nu - 197773496.793534*x29 + 5805304367.87913
    x149 = x148*x21
    x150 = -2675575.66847905*Nu - 138240.0*x29 - 5278341.3229329
    x151 = x0*x150
    x152 = Nu*(-2510664218.28128*Nu - 42636451.6032331*x29 + 14515200.0*x86 + 1002013764.01019)
    x153 = 43393301259014.8*Nu + 43133561885859.3*x29 + 5927865218923.02*x86 + 86618264430493.3*(1 - 0.496948781616935*Nu)**2 + 188440788778196.0
    x154 = r*x153
    x155 = 14700.0*Nu + 42911.0
    x156 = 283115520.0*x155
    x157 = -1698693120.0*Nu*(11592.0*Nu + 69847.0) + 49152.0*r*(409207698.136075*Nu + 102574080.0*x29 - 2119671837.36038) + 879923036160.0*x0 + x156*x21
    x158 = x157*x96
    x159 = (x147 - 1.59227685093395e-9*x149 - 1.67189069348064e-7*x151 + 9.55366110560367e-9*x152 + 1.72773095804465e-13*x154 + 1.72773095804465e-13*x158)**2
    x160 = Nu*r
    x161 = Nu*x21
    x162 = r*x29
    x163 = r*x155
    x164 = x21*x29
    x165 = 5041721180160.0*x29 - 104186110149937.0
    x166 = -25392914995744.3*Nu - r*x156 - x165 - 879923036160.0*x21
    x167 = x166*x96
    x168 = -0.0438084424460039*Nu - 0.143521050466841*r + 0.0210425293255724*x124 + 0.0385795738434214*x160 + 0.00941289164152486*x161 + 0.00662650629087394*x162 - 1.18824456940711e-6*x163 + 0.000486339502879429*x164 - 3.63558293513537e-15*x167 + 0.0185696317637669*x21 + 0.291062041428379*x29 + 0.0244692826489756*x86 + 1
    x169 = x168**(-2)
    x170 = 4.0*x29
    x171 = 0.0625*x58*x60*(18.0*Nu - 1.0) - 0.03125*(-33.0*Nu + 32.0*x29 - 5.0)*(x3*x59 + 5.0*x7 + 5.0*x8) - 0.03125*(-5.0*Nu + x170 + 1.0)*(-15.0*x4 + 15.0*x7 + 15.0*x8)
    x172 = x119*x146*x159*x169*x171*x73
    x173 = x118**2
    x174 = prst**2
    x175 = x145**(-2)
    x176 = 1822680546449.21*x29
    x177 = 5787938193408.0*x124
    x178 = -12049908701745.2*Nu + r*x176 - 39476764256925.6*r + 10611661054566.2*x160 + 2589101062873.81*x161 - 326837426.241486*x163 + 133772083200.0*x164 - x167 + x177 + 5107745331375.71*x21 + 80059249540278.2*x29 + 6730497718123.02*x86 + 275059053208689.0
    x179 = x178**(-1)
    x180 = 0.125*x58
    x181 = 4.0*Nu
    x182 = 3.0*x4
    x183 = 3.0*x7 + 3.0*x8
    x184 = -x182 + x183
    x185 = 0.0625*x184
    x186 = 0.03125*x58
    x187 = x43*(26.0*Nu + 449.0)
    x188 = x10*(-1171.0*Nu - 861.0)
    x189 = x106*(115.0*Nu + x170 - 37.0)
    x190 = 5787938193408.0*x147 - 9216.0*x149 - 967680.0*x151 + 55296.0*x152 + x154 + x158
    x191 = x190**(-1)
    x192 = x178*x191
    x193 = x192*x35
    x194 = x123*x142
    x195 = 7680.0*x194
    x196 = x120 + x15*(x186*x187 + 0.015625*x188 + 0.015625*x189) + x193*x195 + x25*(x10*(x16 + 2.8125) + x180*(-21.0*X1 + 21.0*X2) + x185*(x181 - 1.0))
    x197 = x173*x174*x175*x179*x190*x196
    x198 = -x1*x103 + x116*x64 + 1.27277314139085e-19*x117*x172 + 1.69542100694444e-8*x197*x36 + x22*x95 + 147.443752990146*x73*x75 + x73*x85 - 11.3175085791863*x76*x78 + x76*x90 + 1.48275342024365*x79*x81 + x82*x83 + x87*x88 + x92*x93 + x97*x98 + 1.0
    x199 = 2.0*x63
    x200 = x120*(x199 + 1.0) + 1.0
    x201 = x200**(-1)
    x202 = -x58*x60
    x203 = x106*(x181 + 1.0)
    x204 = x186*(-39.0*X1 + 39.0*X2)
    x205 = 7.0*Nu
    x206 = 0.390625*x4 + 0.390625*x7 + 0.390625*x8
    x207 = 0.015625*x184
    x208 = x56*(33.0*X1 - 33.0*X2)
    x209 = x51*(x205 - 31.0)
    x210 = x107*(-x181 - 3.0)
    x211 = 0.125*x109
    x212 = x120 + 7680.0*x144 + x15*(0.0625*x208 + 0.125*x209 + 0.0625*x210) + x15*(0.25*x202 + 0.125*x203 + 1.125*x4 + 1.125*x7 + 1.125*x8) + x36*(x113*(2870.0*Nu - x111 + 561.0) + x115*(1166.0*Nu - 328.0*x29 - 171.0) + x211*(68.0*Nu - 1.0)) + x36*(x204*(2.0*Nu - 3.0) - x206*(x205 + 9.0) + x207*(-27.0*Nu + 28.0*x29 - 3.0)) + x68
    x213 = x201*x212
    x214 = (x198*x213)**(-0.5)
    x215 = -2.0*x4 - 2.0*x7 - 2.0*x8
    x216 = 4.0*x63 + 2.0
    x217 = 4.5*X2
    x218 = r**(-6)
    x219 = -6572428.80109422*Nu + 2048.0*x122*x82 + 688128.0*x132 + 1300341.64885296*x29 + 1720320.0
    x220 = x29*x63
    x221 = 4.0*x0
    x222 = x134 + 6.0*x21 + 8.0
    x223 = 1.31621673590926e-19*x123*(53760.0*Nu*(3740417.71815805*r + 1057984.42953951*x0 + x136*(x221 + x222) + x137*(17058.7851094412*r - 27409.3925547206*x0 + 12794.0888320809*x21 + 13218.7851094412) + x139*(1396.0*x0 + x138 + 5778.0*x21 + 7704.0) - 938918.400156317*x14 + x140*(-x221 + x222) + 2115968.85907902*x21 + 2888096.47013111) + 32768.0*x131*x82 + 32768.0*x132*(-1791904.9465589*Nu + 3840.0*r*x128 + 2880.0*x129*x21 + 1920.0*x130 + 806400.0*x14 - 725760.0*x29 + 4143360.0) + 66060288000.0*x14 + 135291469824.0*x220*x96 + 7.0*x29*(-117964800.0*a6 + 4129567622.65173*r - 12357002815.0752*x0 + 7133302759.42198*x14 - 18535504222.6128*x21 + 122635399361.987) + 7.0*x86*(-5706642207.53758*r - 26189434371.6082))/(0.28004222119933*x125 + 4.63661586574928e-9*x126 + 2.8978849160933e-11*x127 + 1.35654132757922e-7*x133 + 2.22557561555966e-7*x141 + 0.0546957463279941*x35 + x91)**2
    x224 = x14*x223
    x225 = 2.0*x25
    x226 = 11575876386816.0*x96
    x227 = 5807150888816.34*Nu + 10215490662751.4*r + 5178202125747.62*x160 + 267544166400.0*x162 - x166*x63 + x176 + x226*x63 + x96*(4161798144000.0*Nu + 1759846072320.0*r + 12148770078720.0) - 53501685054374.1
    x228 = x117*x119*x159*x171*x73
    x229 = -18432.0*r*x148 - 2903040.0*x150*x21 + x153 + x157*x63 + x177 + x226 + x96*(20113376778784.3*Nu + 566231040.0*x163 + x165 + 2639769108480.0*x21)
    x230 = x174*x196
    x231 = x215*x25
    x232 = 7680.0*x219
    x233 = 30720.0*x0*x194 + x143*x232 - x224 + x231
    x234 = x190*x36
    x235 = prst**3
    x236 = prst**5
    x237 = prst**7
    x238 = 4.0*x235
    x239 = 6.0*x236
    x240 = x212*x214/(x120*x216 + 2.0)
    x241 = 2.0*pphi*x22
    x242 = pphi*x225
    x243 = 4.0*pphi**3*x15


    # Evaluate Hamiltonian
    H,xi = evaluate_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,calib_coeffs=calib_coeffs)

    # Heff Jacobian expressions
    dHeffdr = x13*(-dSO*x15*x16*x20 + x20*(x25*(1.25*x4 - 0.75*x50 - 0.0833333333333333*x58*x60 + 0.333333333333333*x61 + 1.25*x7 + 1.25*x8) - x32*x57) + x20*(-x22*x23 - x24*x28 - x25*(-11.0625*Nu + 1.13541666666667*x29 - 0.15625) - x30*x32 - x33*x38) + x45*(0.375*x15*x51*x52 - x25*(0.0833333333333333*x53 + x54)) + x46*(-x22*x39 - x25*(-0.0625*Nu + 1.07291666666667*x29 + 0.15625) - x28*x40 - x32*x41 - x38*x42)) + 0.5*x214*(x198*x201*(30720.0*x0*x123*x142 + 7680.0*x14*x142*x219 - x15*(x182 + x183 - 3.0*x50) + x215*x25 - x218*(x113*(14350.0*Nu - 1320.0*x29 + 2805.0) + x115*(5830.0*Nu - 1640.0*x29 - 855.0) + x211*(340.0*Nu - 5.0)) - x218*(x204*(10.0*Nu - 15.0) - x206*(35.0*Nu + 45.0) + x207*(-135.0*Nu + 140.0*x29 - 15.0)) - x224 - x36*(0.25*x208 + 0.5*x209 + 0.25*x210) - x36*(X1*x2*x217 + x202 + 0.5*x203 + 4.5*x7 + 4.5*x8)) - x198*x212*(-x10*x216*x25 + x15*x215)/x200**2 + x213*(-663.496888455656*Nu*r**(-5.5)*x73 - Nu*x22*x83 + 39.6112800271521*Nu*x74*x76 + x1*x100*x101*x22*x26 + x1*x101*x26*x63*(r*x10 + x11 + x221)/x99**2 - x103 - x116*x28 + 7.59859378406358e-45*x117*x119*x146*x169*x171*x190*x229*x73 + 6.78168402777778e-8*x118*x15*x174*x175*x179*x190*x196 - 9.25454462627843e-34*x146*x227*x228/x168**3 + x15*x73*(118.4*x220 - 51.6952380952381*x82) - 2.24091649004576e-37*x169*x173*x175*x190*x227*x230*x36 + 1.69542100694444e-8*x173*x174*x175*x179*x190*x36*(x142*x193*x232 + 38400.0*x144*x192 - x15*(x10*(9.0*Nu + 8.4375) + x180*(-63.0*X1 + 63.0*X2) + x185*(12.0*Nu - 3.0)) + x191*x195*x227*x35 - x193*x223 + x231 - x36*(x180*x187 + 0.0625*x188 + 0.0625*x189) - 2.29252167428035e-22*x178*x194*x229*x35/x159) + 1.69542100694444e-8*x173*x174*x175*x179*x196*x229*x36 - 8.47710503472222e-8*x197*x218 + x22*x26*(-x15*(x104*(-5.25*Nu - 2.8125) + x105*(2.25 - x217) + x108*(0.5625 - 2.25*Nu)) + x25*x51 - x36*(0.03125*x107*x114 + 0.25*x110 + 0.0104166666666667*x112*x51)) - x225*x95 - x31*x76*x92 - x37*x73*x97 - 3.70688355060912*x77*x81 - 2.0*x84*x88 - 3.0*x87*x98 - 2.0*x89*x93 - 4.41515887225116e-12*x173*x179*x230*x233*x234/x145**3 - 6.62902677807736e-23*x169*x228*x233/x145**5 + 1.01821851311268e-18*x118**3*x146*x159*x169*x171*x73/r**12 - 1.65460508380811e-18*x172/r**14)) - (x10 + 3.0*x21)*(pphi*x66 + pphi*x70 + pphi*x72 + x20*x62 + x45*x67)/x12**2

    dHeffdphi = 0

    dHeffdpr = x240*(11.8620273619492*Nu*x237*x79 + 3.39084201388889e-8*prst*x173*x175*x179*x196*x234 + 5.09109256556341e-19*x117*x119*x146*x159*x169*x171*x235 + x15*x238*x97 + 8.0*x22*x237*x94 + 589.775011960583*x235*x75 - 67.9050514751178*x236*x78 + 0.975638950243592*x237*x82 + x238*x25*x87 + x238*x85 + x239*x25*x92 + x239*x90)

    dHeffdpphi = x13*(x19*x62 + 2.0*x19*x71 + x20*(x24*x241 + x242*x30 + x243*x33) + x44*x67 - 0.25*x44*x69 + x46*(x241*x40 + x242*x41 + x243*x42) + x66 + x70 + x72) + x240*(-pphi*x1*x102*x199 + 2.0*pphi*x116*x22)
    M2 = M*M
    nuH = nu*H
    # Compute H Jacobian
    dHdr = M2 * dHeffdr / nuH
    dHdphi = M2 * dHeffdphi / nuH
    dHdpr = M2 * dHeffdpr / nuH
    dHdpphi = M2 * dHeffdpphi / nuH

    return dHdr, dHdphi, dHdpr, dHdpphi,H,xi


@numb_jit(nopython=True,cache=True)
def evaluate_omega_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,calib_coeffs=None):
    """
    Toy aligned-spin Hamiltonian

    """

    # Coordinate definitions
    r,phi = q
    prst,L = p
    chix1,chiy1,chiz1 = chi1_v
    chix2,chiy2,chiz2 = chi2_v

    pphi = L

    # Calibration coeffs if any
    if calib_coeffs is not None:
        a6 = calib_coeffs['a6'].item()
        dSO = calib_coeffs['dSO'].item()

    # Extra quantities used in the Jacobian
    M = m_1 + m_2
    mu = m_1*m_2/(m_1+m_2)
    nu = mu/M
    Nu = nu
    X1 = m_1/M
    X2 = m_2/M
    Chi1 = chi_1
    Chi1x = chix1
    Chi1y = chiy1
    Chi1z = chiz1
    Chi2 = chi_2
    Chi2x = chix2
    Chi2y = chiy2
    Chi2z = chiz2
    chiL1 = chiL_1
    chiL2 = chiL_2
    z0 = r**3
    z1 = r + 2.0
    z2 = X2*(2.0*chix1*chix2 + 2.0*chiy1*chiy2 + 2.0*chiz1*chiz2)
    z3 = X1*z2
    z4 = X1**2
    z5 = chix1**2 + chiy1**2 + chiz1**2
    z6 = z4*z5
    z7 = X2**2*(chix2**2 + chiy2**2 + chiz2**2)
    z8 = z6 + z7
    z9 = z3 + z8
    z10 = z1*z9
    z11 = z0**(-1)
    z12 = X1*chiL1
    z13 = X2*chiL2
    z14 = z12 + z13
    z15 = -1.40625*Nu - 0.46875
    z16 = r**2
    z17 = z16**(-1)
    z18 = 2.0*pphi
    z19 = z17*z18
    z20 = Nu**2
    z21 = -2.0859375*Nu - 2.07161458333333*z20 + 0.23046875
    z22 = z11*z18
    z23 = 0.5859375*Nu + 1.34765625*z20 + 0.41015625
    z24 = r**4
    z25 = z24**(-1)
    z26 = 4.0*pphi**3*z25
    z27 = 0.46875 - 0.28125*Nu
    z28 = -0.2734375*Nu - 0.798177083333333*z20 - 0.23046875
    z29 = -0.3515625*Nu + 0.29296875*z20 - 0.41015625
    z30 = z12 - z13
    z31 = X1 - X2
    z32 = z30*z31
    z33 = r**(-1)
    z34 = pphi**2
    z35 = z17*z34
    z36 = z11*z34
    z37 = pphi**4*z25
    z38 = Chi1*X1
    z39 = Chi2*X2
    z40 = z38 + z39
    z41 = z40**2
    z42 = -z41 + z9
    z43 = z11*z42
    z44 = z34*z43
    z45 = z38 - z39
    z46 = z4*z5 - z40*z45 - z7
    z47 = z36*(-0.125*z3 + 0.125*z41 + 0.5*z46*(0.5 - X2) - 0.125*z6 - 0.125*z7)
    z48 = 0.125*z31
    z49 = 0.5*z42
    z50 = 5.0*X1
    z51 = -5.0*X2 + z50
    z52 = z6 - z7
    z53 = z17*z9
    z54 = 2.0*z33
    z55 = z1*z14**2/(r*z10 + z24)
    z56 = -z3 + z8
    z57 = -z45**2 + z56
    z58 = 0.0625*z46
    z59 = 264.0*z20
    z60 = 0.00260416666666667*z42
    z61 = 0.0078125*z57
    z62 = z11*(0.5*z46*(0.75 - 1.5*X2) + z49*(-1.75*Nu - 0.9375) + 0.5*z57*(0.1875 - 0.75*Nu)) - z17*z49 + z25*(z31*z58*(-98.0*Nu - 43.0) + z60*(-1610.0*Nu + z59 + 375.0) + z61*(-1090.0*Nu + 152.0*z20 + 219.0)) + 1.0
    z63 = 4.0*Nu
    z64 = r**5
    z65 = z64**(-1)
    z66 = 0.03125*z52
    z67 = 7.0*Nu
    z68 = -3.0*z3 + 3.0*z6 + 3.0*z7
    z69 = Nu**4
    z70 = jnp.log(r)
    z71 = z70**2
    z72 = Nu**3
    z73 = 756.0*Nu
    z74 = z73 + 1079.0
    z75 = 8.0*r + 2.0*z0 + 4.0*z16 + 16.0
    z76 = (2048.0*Nu*z70*(336.0*r + z73 + 407.0) + 28.0*Nu*(1920.0*a6 + 733955.307463037) - 7.0*r*(938918.400156317*Nu - 185763.092693281*z20 - 245760.0) - 5416406.59541186*z20 - 3440640.0)/(32768.0*Nu*z70*(-38842241.4769507*Nu + 240.0*r*(-7466.27061066206*Nu - 3024.0*z20 + 17264.0) + 960.0*z0*z74 + 1920.0*z16*(588.0*Nu + 1079.0) - 1882456.23663972*z20 + 480.0*z24*z74 + 161280.0*z64 + 13447680.0) + 53760.0*Nu*(7680.0*a6*(z24 + z75) + 113485.217444961*r*(-z24 + z75) + 148.04406601634*r*(7704.0*r + 1926.0*z0 + 3852.0*z16 + 349.0*z24 + 36400.0) + 128.0*r*(13218.7851094412*r + 4264.6962773603*z0 + 8529.39255472061*z16 - 6852.34813868015*z24 - 33722.4297811176)) + 67645734912.0*z20*z71 + 7.0*z20*(-39321600.0*a6*(3.0*r + 59.0) + 745857848.115604*a6 + 122635399361.987*r - 6178501407.53758*z0 + 2064783811.32587*z16 - 3089250703.76879*z24 + 1426660551.8844*z64 + 276057889687.011) + 13212057600.0*z64 + 241555486248.807*z69 + 1120.0*z72*(-163683964.822551*r - 17833256.898555*z16 - 1188987459.03162))
    z77 = z24*z76
    z78 = z25*(0.125*z42*(z67 - 31.0) + 0.0625*z57*(-z63 - 3.0) + z58*(33.0*X1 - 33.0*X2)) + z25*(1.125*z3 - 0.25*z51*z52 + 0.125*z56*(z63 + 1.0) + 1.125*z6 + 1.125*z7) + z43 + z53 + z65*(z46*z48*(68.0*Nu - 1.0) + z60*(2870.0*Nu - z59 + 561.0) + z61*(1166.0*Nu - 328.0*z20 - 171.0)) + z65*(z66*(2.0*Nu - 3.0)*(-39.0*X1 + 39.0*X2) + 0.015625*z68*(-27.0*Nu + 28.0*z20 - 3.0) - 0.015625*(z67 + 9.0)*(25.0*z3 + 25.0*z6 + 25.0*z7)) + 7680.0*z77
    z79 = prst**4
    z80 = prst**6
    z81 = prst**8
    z82 = Nu*z81
    z83 = z16 + z9
    z84 = Nu*r
    z85 = Nu*z16
    z86 = r*z20
    z87 = 14700.0*Nu + 42911.0
    z88 = r*z87
    z89 = z16*z20
    z90 = 283115520.0*z87
    z91 = z70*(-25392914995744.3*Nu - r*z90 - 879923036160.0*z16 - 5041721180160.0*z20 + 104186110149937.0)
    z92 = r*z71
    z93 = z16*(-630116198.873299*Nu - 197773496.793534*z20 + 5805304367.87913)
    z94 = z0*(-2675575.66847905*Nu - 138240.0*z20 - 5278341.3229329)
    z95 = Nu*(-2510664218.28128*Nu - 42636451.6032331*z20 + 14515200.0*z72 + 1002013764.01019)
    z96 = r*(43393301259014.8*Nu + 43133561885859.3*z20 + 5927865218923.02*z72 + 86618264430493.3*(1 - 0.496948781616935*Nu)**2 + 188440788778196.0)
    z97 = z70*(-1698693120.0*Nu*(11592.0*Nu + 69847.0) + 49152.0*r*(409207698.136075*Nu + 102574080.0*z20 - 2119671837.36038) + 879923036160.0*z0 + z16*z90)
    z98 = 4.0*z20
    z99 = 0.000130208333333333*z53 + z77
    z100 = -12049908701745.2*Nu - 39476764256925.6*r + 5107745331375.71*z16 + 80059249540278.2*z20 + 5787938193408.0*z71 + 6730497718123.02*z72 + 10611661054566.2*z84 + 2589101062873.81*z85 + 1822680546449.21*z86 - 326837426.241486*z88 + 133772083200.0*z89 - z91 + 275059053208689.0
    z101 = 5787938193408.0*z92 - 9216.0*z93 - 967680.0*z94 + 55296.0*z95 + z96 + z97


    # Evaluate Hamiltonian
    H,_ = evaluate_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,calib_coeffs=calib_coeffs)

    # Heff Jacobian expressions

    dHeffdpphi = z78*(z78*(147.443752990146*Nu*r**(-4.5)*z79 - 11.3175085791863*Nu*r**(-3.5)*z80 + 1.69542100694444e-8*prst**2*z101*z65*z83**2*(7680.0*z100*z64*z76/z101 + z11*(0.125*z52*(-21.0*X1 + 21.0*X2) + 0.0625*z68*(z63 - 1.0) + z9*(3.0*Nu + 2.8125)) + z25*(z31*z66*(26.0*Nu + 449.0) + 0.015625*z56*(115.0*Nu + z98 - 37.0) + 0.015625*z9*(-1171.0*Nu - 861.0)) + z53)/(z100*z99**2) + 1.48275342024365*r**(-2.5)*z82 + z11*z79*(92.7110442849544*Nu - 131.0*z20 + 10.0*z72) + z11*z80*(-33.9782122170436*Nu - 89.5298327361234*z20 - 14.0*z69 + 188.0*z72) + z17*z79*(8.0*Nu - 6.0*z20) + z17*z80*(-2.78300763695006*Nu - 5.4*z20 + 6.0*z72) + z17*z81*(1.38977750996128*Nu + 3.33842023648322*z20 - 6.0*z69 + 3.42857142857143*z72) + z25*z79*(Nu*(452.542166996693 - 51.6952380952381*z70) + z20*(118.4*z70 - 1796.13660498019) + 602.318540416564*z72) - z33*z34*z55 + 0.121954868780449*z33*z82 + z35*z62 + 1.0 + 1.27277314139085e-19*z79*z83**4*(0.0625*z51*z52*(18.0*Nu - 1.0) - 0.03125*(-33.0*Nu + 32.0*z20 - 5.0)*(z2*z50 + 5.0*z6 + 5.0*z7) - 0.03125*(-5.0*Nu + z98 + 1.0)*(-15.0*z3 + 15.0*z6 + 15.0*z7))*(z92 - 1.59227685093395e-9*z93 - 1.67189069348064e-7*z94 + 9.55366110560367e-9*z95 + 1.72773095804465e-13*z96 + 1.72773095804465e-13*z97)**2/(r**13*z99**4*(-0.0438084424460039*Nu - 0.143521050466841*r + 0.0185696317637669*z16 + 0.291062041428379*z20 + 0.0210425293255724*z71 + 0.0244692826489756*z72 + 0.0385795738434214*z84 + 0.00941289164152486*z85 + 0.00662650629087394*z86 - 1.18824456940711e-6*z88 + 0.000486339502879429*z89 - 3.63558293513537e-15*z91 + 1)**2))/(z53*(z54 + 1.0) + 1.0))**(-0.5)*(2.0*pphi*z17*z62 - pphi*z54*z55)/(z53*(4.0*z33 + 2.0) + 2.0) + (Nu*dSO*z11*z14 + pphi*z14*(z15*z19 + z21*z22 + z23*z26) + pphi*z32*(z19*z27 + z22*z28 + z26*z29) + 2.0*z14*z47 + z14*(z17*(-0.625*z3 + 0.375*z41 - 0.166666666666667*z46*z51 + 0.0416666666666667*z51*z52 - 0.625*z6 - 0.625*z7) + z47) + z14*(z15*z35 + z17*(-5.53125*Nu + 0.567708333333333*z20 - 0.078125) + z21*z36 + z23*z37 + z33*(0.71875*Nu - 0.09375) + 1.75) + z30*(z17*(0.0416666666666667*z31*z9 + z49*(0.416666666666667 - 0.833333333333333*X2)) - z44*z48) - 0.25*z32*z44 + z32*(z17*(-0.03125*Nu + 0.536458333333333*z20 + 0.078125) + z27*z35 + z28*z36 + z29*z37 + z33*(0.34375*Nu + 0.09375) + 0.25))/(z0 + z10)

    # Compute H Jacobian

    omega = M * M * dHeffdpphi / (nu*H)

    return omega


@numb_jit(nopython=True,cache=True)
def evaluate_csi_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,calib_coeffs=None):
    """
    Toy aligned-spin Hamiltonian

    """

    # Coordinate definitions
    r,phi = q
    prst,L = p
    chix1,chiy1,chiz1 = chi1_v
    chix2,chiy2,chiz2 = chi2_v

    pphi = L

    # Calibration coeffs if any
    if calib_coeffs is not None:
        a6 = calib_coeffs['a6'].item()
        d5 = calib_coeffs['d5'].item()
        dSO = calib_coeffs['dSO'].item()
        dSS = calib_coeffs['dSS'].item()
        flagNLOSO = calib_coeffs['flagNLOSO'].item()
        flagNLOSO2 = calib_coeffs['flagNLOSO2'].item()
        flagNLOSO3 = calib_coeffs['flagNLOSO3'].item()
        flagNLOSS = calib_coeffs['flagNLOSS'].item()
        flagNLOSS2 = calib_coeffs['flagNLOSS2'].item()
        flagS3 = calib_coeffs['flagS3'].item()

    # Extra quantities used in the Hamiltonian
    M = m_1 + m_2
    mu = m_1*m_2/(m_1+m_2)
    nu = mu/M
    Nu = nu
    X1 = m_1/M
    X2 = m_2/M
    Chi1 = chi_1
    Chi1x = chix1
    Chi1y = chiy1
    Chi1z = chiz1
    Chi2 = chi_2
    Chi2x = chix2
    Chi2y = chiy2
    Chi2z = chiz2
    chiL1 = chiL_1
    chiL2 = chiL_2

    # Actual Hamiltonian expressions
    Dbpm = r*(6730497718123.02*Nu**3 + 133772083200.0*Nu**2*r**2 + 1822680546449.21*Nu**2*r + 80059249540278.2*Nu**2 + 2589101062873.81*Nu*r**2 + 10611661054566.2*Nu*r - 12049908701745.2*Nu + 5107745331375.71*r**2 - 326837426.241486*r*(14700.0*Nu + 42911.0) - 39476764256925.6*r - (-5041721180160.0*Nu**2 - 25392914995744.3*Nu - 879923036160.0*r**2 - 283115520.0*r*(14700.0*Nu + 42911.0) + 104186110149937.0)*jnp.log(r) + 5787938193408.0*jnp.log(r)**2 + 275059053208689.0)/(55296.0*Nu*(14515200.0*Nu**3 - 42636451.6032331*Nu**2 - 2510664218.28128*Nu + 1002013764.01019) - 967680.0*r**3*(-138240.0*Nu**2 - 2675575.66847905*Nu - 5278341.3229329) - 9216.0*r**2*(-197773496.793534*Nu**2 - 630116198.873299*Nu + 5805304367.87913) + r*(5927865218923.02*Nu**3 + 43133561885859.3*Nu**2 + 43393301259014.8*Nu + 86618264430493.3*(1 - 0.496948781616935*Nu)**2 + 188440788778196.0) + 5787938193408.0*r*jnp.log(r)**2 + (-1698693120.0*Nu*(11592.0*Nu + 69847.0) + 879923036160.0*r**3 + 283115520.0*r**2*(14700.0*Nu + 42911.0) + 49152.0*r*(102574080.0*Nu**2 + 409207698.136075*Nu - 2119671837.36038))*jnp.log(r))

    Apm = 7680.0*r**4*(-5416406.59541186*Nu**2 + 28.0*Nu*(1920.0*a6 + 733955.307463037) + 2048.0*Nu*(756.0*Nu + 336.0*r + 407.0)*jnp.log(r) - 7.0*r*(-185763.092693281*Nu**2 + 938918.400156317*Nu - 245760.0) - 3440640.0)/(241555486248.807*Nu**4 + 1120.0*Nu**3*(-17833256.898555*r**2 - 163683964.822551*r - 1188987459.03162) + 7.0*Nu**2*(-39321600.0*a6*(3.0*r + 59.0) + 745857848.115604*a6 + 1426660551.8844*r**5 - 3089250703.76879*r**4 - 6178501407.53758*r**3 + 2064783811.32587*r**2 + 122635399361.987*r + 276057889687.011) + 67645734912.0*Nu**2*jnp.log(r)**2 + 53760.0*Nu*(7680.0*a6*(r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + 128.0*r*(-6852.34813868015*r**4 + 4264.6962773603*r**3 + 8529.39255472061*r**2 + 13218.7851094412*r - 33722.4297811176) + 113485.217444961*r*(-r**4 + 2.0*r**3 + 4.0*r**2 + 8.0*r + 16.0) + 148.04406601634*r*(349.0*r**4 + 1926.0*r**3 + 3852.0*r**2 + 7704.0*r + 36400.0)) + 32768.0*Nu*(-1882456.23663972*Nu**2 - 38842241.4769507*Nu + 161280.0*r**5 + 480.0*r**4*(756.0*Nu + 1079.0) + 960.0*r**3*(756.0*Nu + 1079.0) + 1920.0*r**2*(588.0*Nu + 1079.0) + 240.0*r*(-3024.0*Nu**2 - 7466.27061066206*Nu + 17264.0) + 13447680.0)*jnp.log(r) + 13212057600.0*r**5)

    t2 = chix2**2 + chiy2**2 + chiz2**2

    t1 = chix1**2 + chiy1**2 + chiz1**2

    ap2 = X1**2*t1 + X1*X2*(2.0*chix1*chix2 + 2.0*chiy1*chiy2 + 2.0*chiz1*chiz2) + X2**2*t2

    xi = Dbpm**0.5*r**2*(Apm + ap2/r**2)/(ap2 + r**2)

    delta = X1 - X2

    flagNLOSS2 = 1.00000000000000

    apam = X1**2*t1 - X2**2*t2

    am2 = X1**2*t1 - X1*X2*(2.0*chix1*chix2 + 2.0*chiy1*chiy2 + 2.0*chiz1*chiz2) + X2**2*t2

    QSalign2 = flagNLOSS2*prst**4*(-0.46875*am2*(4.0*Nu**2 - 5.0*Nu + 1.0) - 0.15625*ap2*(32.0*Nu**2 - 33.0*Nu - 5.0) + 0.3125*apam*delta*(18.0*Nu - 1.0))/(r**3*xi**4)

    flagQPN5 = 1.00000000000000

    flagQPN4 = 1.00000000000000

    Qpm = flagQPN4*(0.121954868780449*Nu*prst**8/r + prst**6*(6.0*Nu**3 - 5.4*Nu**2 - 2.78300763695006*Nu)/r**2 + prst**4*(10.0*Nu**3 - 131.0*Nu**2 + 92.7110442849544*Nu)/r**3) + flagQPN5*(1.48275342024365*Nu*prst**8/r**2.5 - 11.3175085791863*Nu*prst**6/r**3.5 + 147.443752990146*Nu*prst**4/r**4.5) + flagQPN5*(prst**8*(-6.0*Nu**4 + 3.42857142857143*Nu**3 + 3.33842023648322*Nu**2 + 1.38977750996128*Nu)/r**2 + prst**6*(-14.0*Nu**4 + 188.0*Nu**3 - 89.5298327361234*Nu**2 - 33.9782122170436*Nu)/r**3 + prst**4*(602.318540416564*Nu**3 + Nu**2*(118.4*jnp.log(r) - 1796.13660498019) + Nu*(452.542166996693 - 51.6952380952381*jnp.log(r)))/r**4) + prst**4*(-6.0*Nu**2 + 8.0*Nu)/r**2

    Qq = QSalign2 + Qpm

    Bnpa = -r*(r + 2.0)/(ap2*r*(r + 2.0) + r**4)

    flagNLOSS = 1.00000000000000

    BnpSalign2 = flagNLOSS*(0.1875*am2*(4.0*Nu - 1.0) + ap2*(3.0*Nu + 2.8125) - 2.625*apam*delta)/r**3 + flagNLOSS2*(0.015625*am2*(4.0*Nu**2 + 115.0*Nu - 37.0) + 0.015625*ap2*(-1171.0*Nu - 861.0) + 0.03125*apam*delta*(26.0*Nu + 449.0))/r**4

    Bnp = Apm*Dbpm + BnpSalign2 + ap2/r**2 - 1.0

    flagNLOSSprec2 = 1.00000000000000

    flagNLOSSprec = 1.00000000000000

    amz = Chi1*X1 - Chi2*X2

    apz = Chi1*X1 + Chi2*X2

    napnam = -0.5*amz*apz + 0.5*apam

    amz2 = amz**2

    nam2 = 0.5*am2 - 0.5*amz2

    apz2 = apz**2

    nap2 = 0.5*ap2 - 0.5*apz2

    BpSprec2 = flagNLOSS*flagNLOSSprec*(nam2*(0.1875 - 0.75*Nu) + nap2*(-1.75*Nu - 0.9375) + napnam*(0.75 - 1.5*X2))/r**3 + flagNLOSS2*flagNLOSSprec2*(-0.125*delta*napnam*(98.0*Nu + 43.0) + 0.015625*nam2*(152.0*Nu**2 - 1090.0*Nu + 219.0) + 0.00520833333333333*nap2*(264.0*Nu**2 - 1610.0*Nu + 375.0))/r**4 - nap2/r**2

    Bp = BpSprec2 + 1.0

    ASprec2 = flagNLOSS*flagNLOSSprec*(4.125*delta*napnam + 0.125*nam2*(-4.0*Nu - 3.0) + 0.25*nap2*(7.0*Nu - 31.0))/r**4 + flagNLOSS2*flagNLOSSprec2*(0.25*delta*napnam*(68.0*Nu - 1.0) + 0.015625*nam2*(-328.0*Nu**2 + 1166.0*Nu - 171.0) + 0.00520833333333333*nap2*(-264.0*Nu**2 + 2870.0*Nu + 561.0))/r**5 + 2.0*nap2/r**3

    ASalign2 = flagNLOSS*(0.125*am2*(4.0*Nu + 1.0) + 1.125*ap2 - 1.25*apam*delta)/r**4 + flagNLOSS2*(0.046875*am2*(28.0*Nu**2 - 27.0*Nu - 3.0) - 0.390625*ap2*(7.0*Nu + 9.0) - 1.21875*apam*delta*(2.0*Nu - 3.0))/r**5

    A = (ASalign2 + ASprec2 + Apm + ap2/r**2)/(ap2*(1.0 + 2.0/r)/r**2 + 1.0)

    ap = X1*chiL1 + X2*chiL2

    lap = ap

    Heven = (A*(Bnpa*L**2*lap**2/r**2 + Bp*L**2/r**2 + Qq + prst**2*(Bnp + 1.0)/xi**2 + 1.0))**0.5

    am = X1*chiL1 - X2*chiL2

    lam = am

    Ga3 = L*lam*(-0.25*L**2*delta*nap2/r**3 + (0.0416666666666667*ap2*delta + nap2*(0.416666666666667 - 0.833333333333333*X2))/r**2) + L*lap*(L**2*(-0.25*nap2 + napnam*(0.5 - X2))/r**3 + (-0.25*ap2 + 0.208333333333333*apam*delta - 1.66666666666667*delta*napnam - 0.75*nap2)/r**2)

    SOcalib = L*Nu*dSO*lap/r**3

    flagNLOSO2 = 1.00000000000000

    flagNLOSO = 1.00000000000000

    gam = flagNLOSO*(L**2*(0.46875 - 0.28125*Nu)/r**2 + (0.34375*Nu + 0.09375)/r) + flagNLOSO2*(L**4*(0.29296875*Nu**2 - 0.3515625*Nu - 0.41015625)/r**4 + L**2*(-0.798177083333333*Nu**2 - 0.2734375*Nu - 0.23046875)/r**3 + (0.536458333333333*Nu**2 - 0.03125*Nu + 0.078125)/r**2) + 0.25

    gap = flagNLOSO*(L**2*(-1.40625*Nu - 0.46875)/r**2 + (0.71875*Nu - 0.09375)/r) + flagNLOSO2*(L**4*(1.34765625*Nu**2 + 0.5859375*Nu + 0.41015625)/r**4 + L**2*(-2.07161458333333*Nu**2 - 2.0859375*Nu + 0.23046875)/r**3 + (0.567708333333333*Nu**2 - 5.53125*Nu - 0.078125)/r**2) + 1.75

    Hodd = (Ga3 + L*delta*gam*lam + L*gap*lap + SOcalib)/(ap2*(r + 2.0) + r**3)

    pr = prst/xi


    return xi

class Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD():
    def __init__(self,**kwargs):
       pass

    def __call__(self,q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,**kwargs):
        return evaluate_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,calib_coeffs=self.calibration_coeffs)



    def grad(self, q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2):
        return evaluate_Jacobian_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,calib_coeffs=self.calibration_coeffs)

    def hessian(self, q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2):
        return evaluate_Hessian_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,calib_coeffs=self.calibration_coeffs).reshape(4, 4)

    def csi(self,q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2):
        return evaluate_csi_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,calib_coeffs=self.calibration_coeffs)

    def dynamics(self,q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2):
        return evaluate_dynamics_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,calib_coeffs=self.calibration_coeffs)

    def omega(self,q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2):
        return evaluate_omega_Ham_align_AvgS2precess_simple_18102022_clean_v5PHM_opt_AD(q,p,chi1_v,chi2_v,m_1,m_2,chi_1,chi_2,chiL_1,chiL_2,calib_coeffs=self.calibration_coeffs)
